//
//      用户解析MFC程序的MsgMap表格
//
// 历史:
//
// 2012-2-6 15:20 Allan(xxNull@163.com) 创建
// 2012-2-6 18:06 Allan(xxNull@163.com) 解决某些情况下判断出错的问题。
// 
#include <idc.idc>

static AddEnumsMember(id,name,number)
{
	AddConstEx(id,name,number,-1);
}

static GetNameByMessage(msgid)
{
	if (msgid == 0x0000)return "WM_NULL";
	if (msgid == 0x0001)return "WM_CREATE";
	if (msgid == 0x0002)return "WM_DESTROY";
	if (msgid == 0x0003)return "WM_MOVE";
	if (msgid == 0x0004)return "WM_SIZEWAIT";
	if (msgid == 0x0005)return "WM_SIZE";
	if (msgid == 0x0006)return "WM_ACTIVATE";
	if (msgid == 0x0007)return "WM_SETFOCUS";
	if (msgid == 0x0008)return "WM_KILLFOCUS";
	if (msgid == 0x0009)return "WM_SETVISIBLE";
	if (msgid == 0x000a)return "WM_ENABLE";
	if (msgid == 0x000b)return "WM_SETREDRAW";
	if (msgid == 0x000c)return "WM_SETTEXT";
	if (msgid == 0x000d)return "WM_GETTEXT";
	if (msgid == 0x000e)return "WM_GETTEXTLENGTH";
	if (msgid == 0x000f)return "WM_PAINT";
	if (msgid == 0x0010)return "WM_CLOSE";
	if (msgid == 0x0011)return "WM_QUERYENDSESSION";
	if (msgid == 0x0012)return "WM_QUIT";
	if (msgid == 0x0013)return "WM_QUERYOPEN";
	if (msgid == 0x0014)return "WM_ERASEBKGND";
	if (msgid == 0x0015)return "WM_SYSCOLORCHANGE";
	if (msgid == 0x0016)return "WM_ENDSESSION";
	if (msgid == 0x0017)return "WM_SYSTEMERROR";
	if (msgid == 0x0018)return "WM_SHOWWINDOW";
	if (msgid == 0x0019)return "WM_CTLCOLOR";
	if (msgid == 0x001a)return "WM_WININICHANGE";
	if (msgid == 0x001b)return "WM_DEVMODECHANGE";
	if (msgid == 0x001c)return "WM_ACTIVATEAPP";
	if (msgid == 0x001d)return "WM_FONTCHANGE";
	if (msgid == 0x001e)return "WM_TIMECHANGE";
	if (msgid == 0x001f)return "WM_CANCELMODE";
	if (msgid == 0x0020)return "WM_SETCURSOR";
	if (msgid == 0x0021)return "WM_MOUSEACTIVATE";
	if (msgid == 0x0022)return "WM_CHILDACTIVATE";
	if (msgid == 0x0023)return "WM_QUEUESYNC";
	if (msgid == 0x0024)return "WM_GETMINMAXINFO";
	if (msgid == 0x0025)return "WM_LOGOFF";
	if (msgid == 0x0026)return "WM_PAINTICON";
	if (msgid == 0x0027)return "WM_ICONERASEBKGND";
	if (msgid == 0x0028)return "WM_NEXTDLGCTL";
	if (msgid == 0x0029)return "WM_ALTTABACTIVE";
	if (msgid == 0x002a)return "WM_SPOOLERSTATUS";
	if (msgid == 0x002b)return "WM_DRAWITEM";
	if (msgid == 0x002c)return "WM_MEASUREITEM";
	if (msgid == 0x002d)return "WM_DELETEITEM";
	if (msgid == 0x002e)return "WM_VKEYTOITEM";
	if (msgid == 0x002f)return "WM_CHARTOITEM";
	if (msgid == 0x0030)return "WM_SETFONT";
	if (msgid == 0x0031)return "WM_GETFONT";
	if (msgid == 0x0032)return "WM_SETHOTKEY";
	if (msgid == 0x0033)return "WM_GETHOTKEY";
	if (msgid == 0x0034)return "WM_FILESYSCHANGE";
	if (msgid == 0x0035)return "WM_ISACTIVEICON";
	if (msgid == 0x0036)return "WM_QUERYPARKICON";
	if (msgid == 0x0037)return "WM_QUERYDRAGICON";
	if (msgid == 0x0038)return "WM_WINHELP";
	if (msgid == 0x0039)return "WM_COMPAREITEM";
	if (msgid == 0x003a)return "WM_FULLSCREEN";
	if (msgid == 0x003b)return "WM_CLIENTSHUTDOWN";
	if (msgid == 0x003c)return "WM_DDEMLEVENT";
	if (msgid == 0x003d)return "WM_GETOBJECT";
	if (msgid == 0x003e)return "WM_UNDEF_0x003e";
	if (msgid == 0x003f)return "WM_CALCSCROLL";
	if (msgid == 0x0040)return "WM_TESTING";
	if (msgid == 0x0041)return "WM_COMPACTING";
	if (msgid == 0x0042)return "WM_OTHERWINDOWCREATED";
	if (msgid == 0x0043)return "WM_OTHERWINDOWDESTROYED";
	if (msgid == 0x0044)return "WM_COMMNOTIFY";
	if (msgid == 0x0045)return "WM_MEDIASTATUSCHANGE";
	if (msgid == 0x0046)return "WM_WINDOWPOSCHANGING";
	if (msgid == 0x0047)return "WM_WINDOWPOSCHANGED";
	if (msgid == 0x0048)return "WM_POWER";
	if (msgid == 0x0049)return "WM_COPYGLOBALDATA";
	if (msgid == 0x004a)return "WM_COPYDATA";
	if (msgid == 0x004b)return "WM_CANCELJOURNAL";
	if (msgid == 0x004c)return "WM_LOGONNOTIFY";
	if (msgid == 0x004d)return "WM_KEYF1";
	if (msgid == 0x004e)return "WM_NOTIFY";
	if (msgid == 0x004f)return "WM_ACCESS_WINDOW";
	if (msgid == 0x0050)return "WM_INPUTLANGCHANGEREQUEST";
	if (msgid == 0x0051)return "WM_INPUTLANGCHANGE";
	if (msgid == 0x0052)return "WM_TCARD";
	if (msgid == 0x0053)return "WM_HELP";
	if (msgid == 0x0054)return "WM_USERCHANGED";
	if (msgid == 0x0055)return "WM_NOTIFYFORMAT";
	if (msgid == 0x0056)return "WM_UNDEF_0x0056";
	if (msgid == 0x0057)return "WM_UNDEF_0x0057";
	if (msgid == 0x0058)return "WM_UNDEF_0x0058";
	if (msgid == 0x0059)return "WM_UNDEF_0x0059";
	if (msgid == 0x005a)return "WM_UNDEF_0x005a";
	if (msgid == 0x005b)return "WM_UNDEF_0x005b";
	if (msgid == 0x005c)return "WM_UNDEF_0x005c";
	if (msgid == 0x005d)return "WM_UNDEF_0x005d";
	if (msgid == 0x005e)return "WM_UNDEF_0x005e";
	if (msgid == 0x005f)return "WM_UNDEF_0x005f";
	if (msgid == 0x0060)return "WM_UNDEF_0x0060";
	if (msgid == 0x0061)return "WM_UNDEF_0x0061";
	if (msgid == 0x0062)return "WM_UNDEF_0x0062";
	if (msgid == 0x0063)return "WM_UNDEF_0x0063";
	if (msgid == 0x0064)return "WM_UNDEF_0x0064";
	if (msgid == 0x0065)return "WM_UNDEF_0x0065";
	if (msgid == 0x0066)return "WM_UNDEF_0x0066";
	if (msgid == 0x0067)return "WM_UNDEF_0x0067";
	if (msgid == 0x0068)return "WM_UNDEF_0x0068";
	if (msgid == 0x0069)return "WM_UNDEF_0x0069";
	if (msgid == 0x006a)return "WM_UNDEF_0x006a";
	if (msgid == 0x006b)return "WM_UNDEF_0x006b";
	if (msgid == 0x006c)return "WM_UNDEF_0x006c";
	if (msgid == 0x006d)return "WM_UNDEF_0x006d";
	if (msgid == 0x006e)return "WM_UNDEF_0x006e";
	if (msgid == 0x006f)return "WM_UNDEF_0x006f";
	if (msgid == 0x0070)return "WM_FINALDESTROY";
	if (msgid == 0x0071)return "WM_MEASUREITEM_CLIENTDATA";
	if (msgid == 0x0072)return "WM_TASKACTIVATED";
	if (msgid == 0x0073)return "WM_TASKDEACTIVATED";
	if (msgid == 0x0074)return "WM_TASKCREATED";
	if (msgid == 0x0075)return "WM_TASKDESTROYED";
	if (msgid == 0x0076)return "WM_TASKUICHANGED";
	if (msgid == 0x0077)return "WM_TASKVISIBLE";
	if (msgid == 0x0078)return "WM_TASKNOTVISIBLE";
	if (msgid == 0x0079)return "WM_SETCURSORINFO";
	if (msgid == 0x007a)return "WM_UNDEF_0x007a";
	if (msgid == 0x007b)return "WM_CONTEXTMENU";
	if (msgid == 0x007c)return "WM_STYLECHANGING";
	if (msgid == 0x007d)return "WM_STYLECHANGED";
	if (msgid == 0x007e)return "WM_DISPLAYCHANGE";
	if (msgid == 0x007f)return "WM_GETICON";
	if (msgid == 0x0080)return "WM_SETICON";
	if (msgid == 0x0081)return "WM_NCCREATE";
	if (msgid == 0x0082)return "WM_NCDESTROY";
	if (msgid == 0x0083)return "WM_NCCALCSIZE";
	if (msgid == 0x0084)return "WM_NCHITTEST";
	if (msgid == 0x0085)return "WM_NCPAINT";
	if (msgid == 0x0086)return "WM_NCACTIVATE";
	if (msgid == 0x0087)return "WM_GETDLGCODE";
	if (msgid == 0x0088)return "WM_SYNCPAINT";
	if (msgid == 0x0089)return "WM_SYNCTASK";
	if (msgid == 0x008a)return "WM_UNDEF_0x008a";
	if (msgid == 0x008b)return "WM_KLUDGEMINRECT";
	if (msgid == 0x008c)return "WM_LPKDRAWSWITCHWND";
	if (msgid == 0x008d)return "WM_UNDEF_0x008d";
	if (msgid == 0x008e)return "WM_UNDEF_0x008e";
	if (msgid == 0x008f)return "WM_UNDEF_0x008f";
	if (msgid == 0x0090)return "WM_UNDEF_0x0090";
	if (msgid == 0x0091)return "WM_UNDEF_0x0091";
	if (msgid == 0x0092)return "WM_UNDEF_0x0092";
	if (msgid == 0x0093)return "WM_UNDEF_0x0093";
	if (msgid == 0x0094)return "WM_UNDEF_0x0094";
	if (msgid == 0x0095)return "WM_UNDEF_0x0095";
	if (msgid == 0x0096)return "WM_UNDEF_0x0096";
	if (msgid == 0x0097)return "WM_UNDEF_0x0097";
	if (msgid == 0x0098)return "WM_UNDEF_0x0098";
	if (msgid == 0x0099)return "WM_UNDEF_0x0099";
	if (msgid == 0x009a)return "WM_UNDEF_0x009a";
	if (msgid == 0x009b)return "WM_UNDEF_0x009b";
	if (msgid == 0x009c)return "WM_UNDEF_0x009c";
	if (msgid == 0x009d)return "WM_UNDEF_0x009d";
	if (msgid == 0x009e)return "WM_UNDEF_0x009e";
	if (msgid == 0x009f)return "WM_UNDEF_0x009f";
	if (msgid == 0x00A0)return "WM_NCMOUSEMOVE";
	if (msgid == 0x00A1)return "WM_NCLBUTTONDOWN";
	if (msgid == 0x00A2)return "WM_NCLBUTTONUP";
	if (msgid == 0x00A3)return "WM_NCLBUTTONDBLCLK";
	if (msgid == 0x00A4)return "WM_NCRBUTTONDOWN";
	if (msgid == 0x00A5)return "WM_NCRBUTTONUP";
	if (msgid == 0x00A6)return "WM_NCRBUTTONDBLCLK";
	if (msgid == 0x00A7)return "WM_NCMBUTTONDOWN";
	if (msgid == 0x00A8)return "WM_NCMBUTTONUP";
	if (msgid == 0x00A9)return "WM_NCMBUTTONDBLCLK";
	if (msgid == 0x00AA)return "WM_UNDEF_0x00AA";
	if (msgid == 0x00AB)return "WM_NCXBUTTONDOWN";
	if (msgid == 0x00AC)return "WM_NCXBUTTONUP";
	if (msgid == 0x00AD)return "WM_NCXBUTTONDBLCLK";
	if (msgid == 0x00AE)return "WM_NCUAHDRAWCAPTION";
	if (msgid == 0x00AF)return "WM_NCUAHDRAWFRAME";
	if (msgid == 0x00b0)return "EM_GETSEL32";
	if (msgid == 0x00b1)return "EM_SETSEL32";
	if (msgid == 0x00b2)return "EM_GETRECT32";
	if (msgid == 0x00b3)return "EM_SETRECT32";
	if (msgid == 0x00b4)return "EM_SETRECTNP32";
	if (msgid == 0x00b5)return "EM_SCROLL32";
	if (msgid == 0x00b6)return "EM_LINESCROLL32";
	if (msgid == 0x00b7)return "EM_SCROLLCARET32";
	if (msgid == 0x00b8)return "EM_GETMODIFY32";
	if (msgid == 0x00b9)return "EM_SETMODIFY32";
	if (msgid == 0x00ba)return "EM_GETLINECOUNT32";
	if (msgid == 0x00bb)return "EM_LINEINDEX32";
	if (msgid == 0x00bc)return "EM_SETHANDLE32";
	if (msgid == 0x00bd)return "EM_GETHANDLE32";
	if (msgid == 0x00be)return "EM_GETTHUMB32";
	if (msgid == 0x00bf)return "WM_UNDEF_0x00bf";
	if (msgid == 0x00c0)return "WM_UNDEF_0x00c0";
	if (msgid == 0x00c1)return "EM_LINELENGTH32";
	if (msgid == 0x00c2)return "EM_REPLACESEL32";
	if (msgid == 0x00c3)return "EM_SETFONT";
	if (msgid == 0x00c4)return "EM_GETLINE32";
	if (msgid == 0x00c5)return "EM_LIMITTEXT32";
	if (msgid == 0x00c6)return "EM_CANUNDO32";
	if (msgid == 0x00c7)return "EM_UNDO32";
	if (msgid == 0x00c8)return "EM_FMTLINES32";
	if (msgid == 0x00c9)return "EM_LINEFROMCHAR32";
	if (msgid == 0x00ca)return "EM_SETWORDBREAK";
	if (msgid == 0x00cb)return "EM_SETTABSTOPS32";
	if (msgid == 0x00cc)return "EM_SETPASSWORDCHAR32";
	if (msgid == 0x00cd)return "EM_EMPTYUNDOBUFFER32";
	if (msgid == 0x00ce)return "EM_GETFIRSTVISIBLELINE32";
	if (msgid == 0x00cf)return "EM_SETREADONLY32";
	if (msgid == 0x00d0)return "EM_SETWORDBREAKPROC32";
	if (msgid == 0x00d1)return "EM_GETWORDBREAKPROC32";
	if (msgid == 0x00d2)return "EM_GETPASSWORDCHAR32";
	if (msgid == 0x00d3)return "EM_SETMARGINS32";
	if (msgid == 0x00d4)return "EM_GETMARGINS32";
	if (msgid == 0x00d5)return "EM_GETLIMITTEXT32";
	if (msgid == 0x00d6)return "EM_POSFROMCHAR32";
	if (msgid == 0x00d7)return "EM_CHARFROMPOS32";
	if (msgid == 0x00D8)return "EM_SETIMESTATUS";
	if (msgid == 0x00D9)return "EM_GETIMESTATUS";
	if (msgid == 0x00DA)return "EM_MSGMAX";
	if (msgid == 0x00DB)return "WM_UNDEF_0x00DB";
	if (msgid == 0x00DC)return "WM_UNDEF_0x00DC";
	if (msgid == 0x00DD)return "WM_UNDEF_0x00DD";
	if (msgid == 0x00DE)return "WM_UNDEF_0x00DE";
	if (msgid == 0x00DF)return "WM_UNDEF_0x00DF";
	if (msgid == 0x00e0)return "SBM_SETPOS32";
	if (msgid == 0x00e1)return "SBM_GETPOS32";
	if (msgid == 0x00e2)return "SBM_SETRANGE32";
	if (msgid == 0x00e3)return "SBM_GETRANGE32";
	if (msgid == 0x00e4)return "SBM_ENABLE_ARROWS32";
	if (msgid == 0x00e5)return "WM_UNDEF_0x00e5";
	if (msgid == 0x00e6)return "SBM_SETRANGEREDRAW32";
	if (msgid == 0x00e7)return "WM_UNDEF_0x00e7";
	if (msgid == 0x00e8)return "WM_UNDEF_0x00e8";
	if (msgid == 0x00e9)return "SBM_SETSCROLLINFO32";
	if (msgid == 0x00ea)return "SBM_GETSCROLLINFO32";
	if (msgid == 0x00eb)return "WM_UNDEF_0x00eb";
	if (msgid == 0x00ec)return "WM_UNDEF_0x00ec";
	if (msgid == 0x00ed)return "WM_UNDEF_0x00ed";
	if (msgid == 0x00ee)return "WM_UNDEF_0x00ee";
	if (msgid == 0x00ef)return "WM_UNDEF_0x00ef";
	if (msgid == 0x00f0)return "BM_GETCHECK32";
	if (msgid == 0x00f1)return "BM_SETCHECK32";
	if (msgid == 0x00f2)return "BM_GETSTATE32";
	if (msgid == 0x00f3)return "BM_SETSTATE32";
	if (msgid == 0x00f4)return "BM_SETSTYLE32";
	if (msgid == 0x00f5)return "BM_CLICK32";
	if (msgid == 0x00f6)return "BM_GETIMAGE32";
	if (msgid == 0x00f7)return "BM_SETIMAGE32";
	if (msgid == 0x00f8)return "WM_UNDEF_0x00f8";
	if (msgid == 0x00f9)return "WM_UNDEF_0x00f9";
	if (msgid == 0x00fa)return "WM_UNDEF_0x00fa";
	if (msgid == 0x00fb)return "WM_UNDEF_0x00fb";
	if (msgid == 0x00fc)return "WM_UNDEF_0x00fc";
	if (msgid == 0x00fd)return "WM_UNDEF_0x00fd";
	if (msgid == 0x00fe)return "WM_UNDEF_0x00fe";
	if (msgid == 0x00ff)return "WM_INPUT";
	if (msgid == 0x0100)return "WM_KEYDOWN";
	if (msgid == 0x0101)return "WM_KEYUP";
	if (msgid == 0x0102)return "WM_CHAR";
	if (msgid == 0x0103)return "WM_DEADCHAR";
	if (msgid == 0x0104)return "WM_SYSKEYDOWN";
	if (msgid == 0x0105)return "WM_SYSKEYUP";
	if (msgid == 0x0106)return "WM_SYSCHAR";
	if (msgid == 0x0107)return "WM_SYSDEADCHAR";
	if (msgid == 0x0108)return "WM_YOMICHAR";
	if (msgid == 0x0109)return "WM_UNICHAR";
	if (msgid == 0x010a)return "WM_CONVERTREQUEST";
	if (msgid == 0x010b)return "WM_CONVERTRESULT";
	if (msgid == 0x010c)return "WM_INTERIM";
	if (msgid == 0x010d)return "WM_IME_STARTCOMPOSITION";
	if (msgid == 0x010e)return "WM_IME_ENDCOMPOSITION";
	if (msgid == 0x010f)return "WM_IME_COMPOSITION";
	if (msgid == 0x0110)return "WM_INITDIALOG";
	if (msgid == 0x0111)return "WM_COMMAND";
	if (msgid == 0x0112)return "WM_SYSCOMMAND";
	if (msgid == 0x0113)return "WM_TIMER";
	if (msgid == 0x0114)return "WM_HSCROLL";
	if (msgid == 0x0115)return "WM_VSCROLL";
	if (msgid == 0x0116)return "WM_INITMENU";
	if (msgid == 0x0117)return "WM_INITMENUPOPUP";
	if (msgid == 0x0118)return "WM_SYSTIMER";
	if (msgid == 0x0119)return "WM_UNDEF_0x0119";
	if (msgid == 0x011a)return "WM_UNDEF_0x011a";
	if (msgid == 0x011b)return "WM_UNDEF_0x011b";
	if (msgid == 0x011c)return "WM_UNDEF_0x011c";
	if (msgid == 0x011d)return "WM_UNDEF_0x011d";
	if (msgid == 0x011e)return "WM_UNDEF_0x011e";
	if (msgid == 0x011f)return "WM_MENUSELECT";
	if (msgid == 0x0120)return "WM_MENUCHAR";
	if (msgid == 0x0121)return "WM_ENTERIDLE";
	if (msgid == 0x0122)return "WM_MENURBUTTONUP";
	if (msgid == 0x0123)return "WM_MENUDRAG";
	if (msgid == 0x0124)return "WM_MENUGETOBJECT";
	if (msgid == 0x0125)return "WM_UNINITMENUPOPUP";
	if (msgid == 0x0126)return "WM_MENUCOMMAND";
	if (msgid == 0x0127)return "WM_CHANGEUISTATE";
	if (msgid == 0x0128)return "WM_UPDATEUISTATE";
	if (msgid == 0x0129)return "WM_QUERYUISTATE";
	if (msgid == 0x012a)return "WM_UNDEF_0x012a";
	if (msgid == 0x012b)return "WM_UNDEF_0x012b";
	if (msgid == 0x012c)return "WM_UNDEF_0x012c";
	if (msgid == 0x012d)return "WM_UNDEF_0x012d";
	if (msgid == 0x012e)return "WM_UNDEF_0x012e";
	if (msgid == 0x012f)return "WM_UNDEF_0x012f";
	if (msgid == 0x0130)return "WM_UNDEF_0x0130";
	if (msgid == 0x0131)return "WM_LBTRACKPOINT";
	if (msgid == 0x0132)return "WM_CTLCOLORMSGBOX";
	if (msgid == 0x0133)return "WM_CTLCOLOREDIT";
	if (msgid == 0x0134)return "WM_CTLCOLORLISTBOX";
	if (msgid == 0x0135)return "WM_CTLCOLORBTN";
	if (msgid == 0x0136)return "WM_CTLCOLORDLG";
	if (msgid == 0x0137)return "WM_CTLCOLORSCROLLBAR";
	if (msgid == 0x0138)return "WM_CTLCOLORSTATIC";
	if (msgid == 0x0139)return "WM_UNDEF_0x0139";
	if (msgid == 0x013a)return "WM_UNDEF_0x013a";
	if (msgid == 0x013b)return "WM_UNDEF_0x013b";
	if (msgid == 0x013c)return "WM_UNDEF_0x013c";
	if (msgid == 0x013d)return "WM_UNDEF_0x013d";
	if (msgid == 0x013e)return "WM_UNDEF_0x013e";
	if (msgid == 0x013f)return "WM_UNDEF_0x013f";
	if (msgid == 0x0140)return "CB_GETEDITSEL32";
	if (msgid == 0x0141)return "CB_LIMITTEXT32";
	if (msgid == 0x0142)return "CB_SETEDITSEL32";
	if (msgid == 0x0143)return "CB_ADDSTRING32";
	if (msgid == 0x0144)return "CB_DELETESTRING32";
	if (msgid == 0x0145)return "CB_DIR32";
	if (msgid == 0x0146)return "CB_GETCOUNT32";
	if (msgid == 0x0147)return "CB_GETCURSEL32";
	if (msgid == 0x0148)return "CB_GETLBTEXT32";
	if (msgid == 0x0149)return "CB_GETLBTEXTLEN32";
	if (msgid == 0x014a)return "CB_INSERTSTRING32";
	if (msgid == 0x014b)return "CB_RESETCONTENT32";
	if (msgid == 0x014c)return "CB_FINDSTRING32";
	if (msgid == 0x014d)return "CB_SELECTSTRING32";
	if (msgid == 0x014e)return "CB_SETCURSEL32";
	if (msgid == 0x014f)return "CB_SHOWDROPDOWN32";
	if (msgid == 0x0150)return "CB_GETITEMDATA32";
	if (msgid == 0x0151)return "CB_SETITEMDATA32";
	if (msgid == 0x0152)return "CB_GETDROPPEDCONTROLRECT32";
	if (msgid == 0x0153)return "CB_SETITEMHEIGHT32";
	if (msgid == 0x0154)return "CB_GETITEMHEIGHT32";
	if (msgid == 0x0155)return "CB_SETEXTENDEDUI32";
	if (msgid == 0x0156)return "CB_GETEXTENDEDUI32";
	if (msgid == 0x0157)return "CB_GETDROPPEDSTATE32";
	if (msgid == 0x0158)return "CB_FINDSTRINGEXACT32";
	if (msgid == 0x0159)return "CB_SETLOCALE32";
	if (msgid == 0x015a)return "CB_GETLOCALE32";
	if (msgid == 0x015b)return "CB_GETTOPINDEX32";
	if (msgid == 0x015c)return "CB_SETTOPINDEX32";
	if (msgid == 0x015d)return "CB_GETHORIZONTALEXTENT32";
	if (msgid == 0x015e)return "CB_SETHORIZONTALEXTENT32";
	if (msgid == 0x015f)return "CB_GETDROPPEDWIDTH32";
	if (msgid == 0x0160)return "CB_SETDROPPEDWIDTH32";
	if (msgid == 0x0161)return "CB_INITSTORAGE32";
	if (msgid == 0x0162)return "WM_UNDEF_0x0162";
	if (msgid == 0x0163)return "CB_MULTIPLEADDSTRING";
	if (msgid == 0x0164)return "CB_GETCOMBOBOXINFO";
	if (msgid == 0x0165)return "WM_UNDEF_0x0165";
	if (msgid == 0x0166)return "WM_UNDEF_0x0166";
	if (msgid == 0x0167)return "WM_UNDEF_0x0167";
	if (msgid == 0x0168)return "WM_UNDEF_0x0168";
	if (msgid == 0x0169)return "WM_UNDEF_0x0169";
	if (msgid == 0x016a)return "WM_UNDEF_0x016a";
	if (msgid == 0x016b)return "WM_UNDEF_0x016b";
	if (msgid == 0x016c)return "WM_UNDEF_0x016c";
	if (msgid == 0x016d)return "WM_UNDEF_0x016d";
	if (msgid == 0x016e)return "WM_UNDEF_0x016e";
	if (msgid == 0x016f)return "WM_UNDEF_0x016f";
	if (msgid == 0x0170)return "STM_SETICON32";
	if (msgid == 0x0171)return "STM_GETICON32";
	if (msgid == 0x0172)return "STM_SETIMAGE32";
	if (msgid == 0x0173)return "STM_GETIMAGE32";
	if (msgid == 0x0174)return "STM_MSGMAX";
	if (msgid == 0x0175)return "WM_UNDEF_0x0175";
	if (msgid == 0x0176)return "WM_UNDEF_0x0176";
	if (msgid == 0x0177)return "WM_UNDEF_0x0177";
	if (msgid == 0x0178)return "WM_UNDEF_0x0178";
	if (msgid == 0x0179)return "WM_UNDEF_0x0179";
	if (msgid == 0x017a)return "WM_UNDEF_0x017a";
	if (msgid == 0x017b)return "WM_UNDEF_0x017b";
	if (msgid == 0x017c)return "WM_UNDEF_0x017c";
	if (msgid == 0x017d)return "WM_UNDEF_0x017d";
	if (msgid == 0x017e)return "WM_UNDEF_0x017e";
	if (msgid == 0x017f)return "WM_UNDEF_0x017f";
	if (msgid == 0x0180)return "LB_ADDSTRING32";
	if (msgid == 0x0181)return "LB_INSERTSTRING32";
	if (msgid == 0x0182)return "LB_DELETESTRING32";
	if (msgid == 0x0183)return "LB_SELITEMRANGEEX32";
	if (msgid == 0x0184)return "LB_RESETCONTENT32";
	if (msgid == 0x0185)return "LB_SETSEL32";
	if (msgid == 0x0186)return "LB_SETCURSEL32";
	if (msgid == 0x0187)return "LB_GETSEL32";
	if (msgid == 0x0188)return "LB_GETCURSEL32";
	if (msgid == 0x0189)return "LB_GETTEXT32";
	if (msgid == 0x018a)return "LB_GETTEXTLEN32";
	if (msgid == 0x018b)return "LB_GETCOUNT32";
	if (msgid == 0x018c)return "LB_SELECTSTRING32";
	if (msgid == 0x018d)return "LB_DIR32";
	if (msgid == 0x018e)return "LB_GETTOPINDEX32";
	if (msgid == 0x018f)return "LB_FINDSTRING32";
	if (msgid == 0x0190)return "LB_GETSELCOUNT32";
	if (msgid == 0x0191)return "LB_GETSELITEMS32";
	if (msgid == 0x0192)return "LB_SETTABSTOPS32";
	if (msgid == 0x0193)return "LB_GETHORIZONTALEXTENT32";
	if (msgid == 0x0194)return "LB_SETHORIZONTALEXTENT32";
	if (msgid == 0x0195)return "LB_SETCOLUMNWIDTH32";
	if (msgid == 0x0196)return "LB_ADDFILE32";
	if (msgid == 0x0197)return "LB_SETTOPINDEX32";
	if (msgid == 0x0198)return "LB_GETITEMRECT32";
	if (msgid == 0x0199)return "LB_GETITEMDATA32";
	if (msgid == 0x019a)return "LB_SETITEMDATA32";
	if (msgid == 0x019b)return "LB_SELITEMRANGE32";
	if (msgid == 0x019c)return "LB_SETANCHORINDEX32";
	if (msgid == 0x019d)return "LB_GETANCHORINDEX32";
	if (msgid == 0x019e)return "LB_SETCARETINDEX32";
	if (msgid == 0x019f)return "LB_GETCARETINDEX32";
	if (msgid == 0x01a0)return "LB_SETITEMHEIGHT32";
	if (msgid == 0x01a1)return "LB_GETITEMHEIGHT32";
	if (msgid == 0x01a2)return "LB_FINDSTRINGEXACT32";
	if (msgid == 0x01a3)return "LB_CARETON32";
	if (msgid == 0x01a4)return "LB_CARETOFF32";
	if (msgid == 0x01a5)return "LB_SETLOCALE32";
	if (msgid == 0x01a6)return "LB_GETLOCALE32";
	if (msgid == 0x01a7)return "LB_SETCOUNT32";
	if (msgid == 0x01a8)return "LB_INITSTORAGE32";
	if (msgid == 0x01a9)return "LB_ITEMFROMPOINT32";
	if (msgid == 0x01aa)return "LB_INSERTSTRINGUPPER";
	if (msgid == 0x01ab)return "LB_INSERTSTRINGLOWER";
	if (msgid == 0x01ac)return "LB_ADDSTRINGUPPER";
	if (msgid == 0x01ad)return "LB_ADDSTRINGLOWER";
	if (msgid == 0x01ae)return "LBCB_STARTTRACK";
	if (msgid == 0x01af)return "LBCB_ENDTRACK";
	if (msgid == 0x01B0)return "WM_UNDEF_0x01B0";
	if (msgid == 0x01b1)return "LB_MULTIPLEADDSTRING";
	if (msgid == 0x01b2)return "LB_GETLISTBOXINFO";
	if (msgid == 0x01b3)return "WM_UNDEF_0x01b3";
	if (msgid == 0x01b4)return "WM_UNDEF_0x01b4";
	if (msgid == 0x01b5)return "WM_UNDEF_0x01b5";
	if (msgid == 0x01b6)return "WM_UNDEF_0x01b6";
	if (msgid == 0x01b7)return "WM_UNDEF_0x01b7";
	if (msgid == 0x01b8)return "WM_UNDEF_0x01b8";
	if (msgid == 0x01b9)return "WM_UNDEF_0x01b9";
	if (msgid == 0x01ba)return "WM_UNDEF_0x01ba";
	if (msgid == 0x01bb)return "WM_UNDEF_0x01bb";
	if (msgid == 0x01bc)return "WM_UNDEF_0x01bc";
	if (msgid == 0x01bd)return "WM_UNDEF_0x01bd";
	if (msgid == 0x01be)return "WM_UNDEF_0x01be";
	if (msgid == 0x01bf)return "WM_UNDEF_0x01bf";
	if (msgid == 0x01C0)return "WM_UNDEF_0x01C0";
	if (msgid == 0x01c1)return "WM_UNDEF_0x01c1";
	if (msgid == 0x01c2)return "WM_UNDEF_0x01c2";
	if (msgid == 0x01c3)return "WM_UNDEF_0x01c3";
	if (msgid == 0x01c4)return "WM_UNDEF_0x01c4";
	if (msgid == 0x01c5)return "WM_UNDEF_0x01c5";
	if (msgid == 0x01c6)return "WM_UNDEF_0x01c6";
	if (msgid == 0x01c7)return "WM_UNDEF_0x01c7";
	if (msgid == 0x01c8)return "WM_UNDEF_0x01c8";
	if (msgid == 0x01c9)return "WM_UNDEF_0x01c9";
	if (msgid == 0x01ca)return "WM_UNDEF_0x01ca";
	if (msgid == 0x01cb)return "WM_UNDEF_0x01cb";
	if (msgid == 0x01cc)return "WM_UNDEF_0x01cc";
	if (msgid == 0x01cd)return "WM_UNDEF_0x01cd";
	if (msgid == 0x01ce)return "WM_UNDEF_0x01ce";
	if (msgid == 0x01cf)return "WM_UNDEF_0x01cf";
	if (msgid == 0x01D0)return "WM_UNDEF_0x01D0";
	if (msgid == 0x01d1)return "WM_UNDEF_0x01d1";
	if (msgid == 0x01d2)return "WM_UNDEF_0x01d2";
	if (msgid == 0x01d3)return "WM_UNDEF_0x01d3";
	if (msgid == 0x01d4)return "WM_UNDEF_0x01d4";
	if (msgid == 0x01d5)return "WM_UNDEF_0x01d5";
	if (msgid == 0x01d6)return "WM_UNDEF_0x01d6";
	if (msgid == 0x01d7)return "WM_UNDEF_0x01d7";
	if (msgid == 0x01d8)return "WM_UNDEF_0x01d8";
	if (msgid == 0x01d9)return "WM_UNDEF_0x01d9";
	if (msgid == 0x01da)return "WM_UNDEF_0x01da";
	if (msgid == 0x01db)return "WM_UNDEF_0x01db";
	if (msgid == 0x01dc)return "WM_UNDEF_0x01dc";
	if (msgid == 0x01dd)return "WM_UNDEF_0x01dd";
	if (msgid == 0x01de)return "WM_UNDEF_0x01de";
	if (msgid == 0x01df)return "WM_UNDEF_0x01df";
	if (msgid == 0x01E0)return "WM_UNDEF_0x01E0";
	if (msgid == 0x01e1)return "WM_UNDEF_0x01e1";
	if (msgid == 0x01e2)return "WM_UNDEF_0x01e2";
	if (msgid == 0x01e3)return "MN_SETHMENU";
	if (msgid == 0x01e4)return "MN_GETHMENU";
	if (msgid == 0x01e5)return "MN_SIZEWINDOW";
	if (msgid == 0x01e6)return "MN_OPENHIERARCHY";
	if (msgid == 0x01e7)return "MN_CLOSEHIERARCHY";
	if (msgid == 0x01e8)return "MN_SELECTITEM";
	if (msgid == 0x01e9)return "MN_CANCELMENUS";
	if (msgid == 0x01ea)return "MN_SELECTFIRSTVALIDITEM";
	if (msgid == 0x01eb)return "WM_UNDEF_0x01eb";
	if (msgid == 0x01ec)return "WM_UNDEF_0x01ec";
	if (msgid == 0x01ed)return "WM_UNDEF_0x01ed";
	if (msgid == 0x01ee)return "MN_FINDMENUWINDOWFROMPOINT";
	if (msgid == 0x01ef)return "MN_SHOWPOPUPWINDOW";
	if (msgid == 0x01f0)return "MN_BUTTONUP";
	if (msgid == 0x01f1)return "MN_SETTIMERTOOPENHIERARCHY";
	if (msgid == 0x01f2)return "MN_DBLCLK";
	if (msgid == 0x01f3)return "MN_ACTIVEPOPUP";
	if (msgid == 0x01f4)return "MN_ENDMENU";
	if (msgid == 0x01f5)return "MN_DODRAGDROP";
	if (msgid == 0x01f6)return "WM_UNDEF_0x01f6";
	if (msgid == 0x01f7)return "WM_UNDEF_0x01f7";
	if (msgid == 0x01f8)return "WM_UNDEF_0x01f8";
	if (msgid == 0x01f9)return "WM_UNDEF_0x01f9";
	if (msgid == 0x01fa)return "WM_UNDEF_0x01fa";
	if (msgid == 0x01fb)return "WM_UNDEF_0x01fb";
	if (msgid == 0x01fc)return "WM_UNDEF_0x01fc";
	if (msgid == 0x01fd)return "WM_UNDEF_0x01fd";
	if (msgid == 0x01fe)return "WM_UNDEF_0x01fe";
	if (msgid == 0x01ff)return "WM_UNDEF_0x01ff";
	if (msgid == 0x0200)return "WM_MOUSEMOVE";
	if (msgid == 0x0201)return "WM_LBUTTONDOWN";
	if (msgid == 0x0202)return "WM_LBUTTONUP";
	if (msgid == 0x0203)return "WM_LBUTTONDBLCLK";
	if (msgid == 0x0204)return "WM_RBUTTONDOWN";
	if (msgid == 0x0205)return "WM_RBUTTONUP";
	if (msgid == 0x0206)return "WM_RBUTTONDBLCLK";
	if (msgid == 0x0207)return "WM_MBUTTONDOWN";
	if (msgid == 0x0208)return "WM_MBUTTONUP";
	if (msgid == 0x0209)return "WM_MBUTTONDBLCLK";
	if (msgid == 0x020a)return "WM_MOUSEWHEEL";
	if (msgid == 0x020b)return "WM_XBUTTONDOWN";
	if (msgid == 0x020c)return "WM_XBUTTONUP";
	if (msgid == 0x020d)return "WM_XBUTTONDBLCLK";
	if (msgid == 0x020e)return "WM_UNDEF_0x020e";
	if (msgid == 0x020f)return "WM_UNDEF_0x020f";
	if (msgid == 0x0210)return "WM_PARENTNOTIFY";
	if (msgid == 0x0211)return "WM_ENTERMENULOOP";
	if (msgid == 0x0212)return "WM_EXITMENULOOP";
	if (msgid == 0x0213)return "WM_NEXTMENU";
	if (msgid == 0x0214)return "WM_SIZING";
	if (msgid == 0x0215)return "WM_CAPTURECHANGED";
	if (msgid == 0x0216)return "WM_MOVING";
	if (msgid == 0x0217)return "WM_UNDEF_0x0217";
	if (msgid == 0x0218)return "WM_POWERBROADCAST";
	if (msgid == 0x0219)return "WM_DEVICECHANGE";
	if (msgid == 0x021a)return "WM_UNDEF_0x021a";
	if (msgid == 0x021b)return "WM_UNDEF_0x021b";
	if (msgid == 0x021c)return "WM_UNDEF_0x021c";
	if (msgid == 0x021d)return "WM_UNDEF_0x021d";
	if (msgid == 0x021e)return "WM_UNDEF_0x021e";
	if (msgid == 0x021f)return "WM_UNDEF_0x021f";
	if (msgid == 0x0220)return "WM_MDICREATE";
	if (msgid == 0x0221)return "WM_MDIDESTROY";
	if (msgid == 0x0222)return "WM_MDIACTIVATE";
	if (msgid == 0x0223)return "WM_MDIRESTORE";
	if (msgid == 0x0224)return "WM_MDINEXT";
	if (msgid == 0x0225)return "WM_MDIMAXIMIZE";
	if (msgid == 0x0226)return "WM_MDITILE";
	if (msgid == 0x0227)return "WM_MDICASCADE";
	if (msgid == 0x0228)return "WM_MDIICONARRANGE";
	if (msgid == 0x0229)return "WM_MDIGETACTIVE";
	if (msgid == 0x022a)return "WM_DROPOBJECT";
	if (msgid == 0x022b)return "WM_QUERYDROPOBJECT";
	if (msgid == 0x022c)return "WM_BEGINDRAG";
	if (msgid == 0x022d)return "WM_DRAGLOOP";
	if (msgid == 0x022e)return "WM_DRAGSELECT";
	if (msgid == 0x022af)return "WM_DRAGMOVE";
	if (msgid == 0x0230)return "WM_MDISETMENU";
	if (msgid == 0x0231)return "WM_ENTERSIZEMOVE";
	if (msgid == 0x0232)return "WM_EXITSIZEMOVE";
	if (msgid == 0x0233)return "WM_DROPFILES";
	if (msgid == 0x0234)return "WM_MDIREFRESHMENU";
	if (msgid == 0x0235)return "WM_UNDEF_0x0235";
	if (msgid == 0x0236)return "WM_UNDEF_0x0236";
	if (msgid == 0x0237)return "WM_UNDEF_0x0237";
	if (msgid == 0x0238)return "WM_UNDEF_0x0238";
	if (msgid == 0x0239)return "WM_UNDEF_0x0239";
	if (msgid == 0x023a)return "WM_UNDEF_0x023a";
	if (msgid == 0x023b)return "WM_UNDEF_0x023b";
	if (msgid == 0x023c)return "WM_UNDEF_0x023c";
	if (msgid == 0x023d)return "WM_UNDEF_0x023d";
	if (msgid == 0x023e)return "WM_UNDEF_0x023e";
	if (msgid == 0x023f)return "WM_UNDEF_0x023f";
	if (msgid == 0x0240)return "WM_UNDEF_0x0240";
	if (msgid == 0x0241)return "WM_UNDEF_0x0241";
	if (msgid == 0x0242)return "WM_UNDEF_0x0242";
	if (msgid == 0x0243)return "WM_UNDEF_0x0243";
	if (msgid == 0x0244)return "WM_UNDEF_0x0244";
	if (msgid == 0x0245)return "WM_UNDEF_0x0245";
	if (msgid == 0x0246)return "WM_UNDEF_0x0246";
	if (msgid == 0x0247)return "WM_UNDEF_0x0247";
	if (msgid == 0x0248)return "WM_UNDEF_0x0248";
	if (msgid == 0x0249)return "WM_UNDEF_0x0249";
	if (msgid == 0x024a)return "WM_UNDEF_0x024a";
	if (msgid == 0x024b)return "WM_UNDEF_0x024b";
	if (msgid == 0x024c)return "WM_UNDEF_0x024c";
	if (msgid == 0x024d)return "WM_UNDEF_0x024d";
	if (msgid == 0x024e)return "WM_UNDEF_0x024e";
	if (msgid == 0x024f)return "WM_UNDEF_0x024f";
	if (msgid == 0x0250)return "WM_UNDEF_0x0250";
	if (msgid == 0x0251)return "WM_UNDEF_0x0251";
	if (msgid == 0x0252)return "WM_UNDEF_0x0252";
	if (msgid == 0x0253)return "WM_UNDEF_0x0253";
	if (msgid == 0x0254)return "WM_UNDEF_0x0254";
	if (msgid == 0x0255)return "WM_UNDEF_0x0255";
	if (msgid == 0x0256)return "WM_UNDEF_0x0256";
	if (msgid == 0x0257)return "WM_UNDEF_0x0257";
	if (msgid == 0x0258)return "WM_UNDEF_0x0258";
	if (msgid == 0x0259)return "WM_UNDEF_0x0259";
	if (msgid == 0x025a)return "WM_UNDEF_0x025a";
	if (msgid == 0x025b)return "WM_UNDEF_0x025b";
	if (msgid == 0x025c)return "WM_UNDEF_0x025c";
	if (msgid == 0x025d)return "WM_UNDEF_0x025d";
	if (msgid == 0x025e)return "WM_UNDEF_0x025e";
	if (msgid == 0x025f)return "WM_UNDEF_0x025f";
	if (msgid == 0x0260)return "WM_UNDEF_0x0260";
	if (msgid == 0x0261)return "WM_UNDEF_0x0261";
	if (msgid == 0x0262)return "WM_UNDEF_0x0262";
	if (msgid == 0x0263)return "WM_UNDEF_0x0263";
	if (msgid == 0x0264)return "WM_UNDEF_0x0264";
	if (msgid == 0x0265)return "WM_UNDEF_0x0265";
	if (msgid == 0x0266)return "WM_UNDEF_0x0266";
	if (msgid == 0x0267)return "WM_UNDEF_0x0267";
	if (msgid == 0x0268)return "WM_UNDEF_0x0268";
	if (msgid == 0x0269)return "WM_UNDEF_0x0269";
	if (msgid == 0x026a)return "WM_UNDEF_0x026a";
	if (msgid == 0x026b)return "WM_UNDEF_0x026b";
	if (msgid == 0x026c)return "WM_UNDEF_0x026c";
	if (msgid == 0x026d)return "WM_UNDEF_0x026d";
	if (msgid == 0x026e)return "WM_UNDEF_0x026e";
	if (msgid == 0x026f)return "WM_UNDEF_0x026f";
	if (msgid == 0x0270)return "WM_UNDEF_0x0270";
	if (msgid == 0x0271)return "WM_UNDEF_0x0271";
	if (msgid == 0x0272)return "WM_UNDEF_0x0272";
	if (msgid == 0x0273)return "WM_UNDEF_0x0273";
	if (msgid == 0x0274)return "WM_UNDEF_0x0274";
	if (msgid == 0x0275)return "WM_UNDEF_0x0275";
	if (msgid == 0x0276)return "WM_UNDEF_0x0276";
	if (msgid == 0x0277)return "WM_UNDEF_0x0277";
	if (msgid == 0x0278)return "WM_UNDEF_0x0278";
	if (msgid == 0x0279)return "WM_UNDEF_0x0279";
	if (msgid == 0x027a)return "WM_UNDEF_0x027a";
	if (msgid == 0x027b)return "WM_UNDEF_0x027b";
	if (msgid == 0x027c)return "WM_UNDEF_0x027c";
	if (msgid == 0x027d)return "WM_UNDEF_0x027d";
	if (msgid == 0x027e)return "WM_UNDEF_0x027e";
	if (msgid == 0x027f)return "WM_UNDEF_0x027f";
	if (msgid == 0x0280)return "WM_KANJIFIRST";
	if (msgid == 0x0281)return "WM_IME_SETCONTENT";
	if (msgid == 0x0282)return "WM_IME_NOTIFY";
	if (msgid == 0x0283)return "WM_IME_CONTROL";
	if (msgid == 0x0284)return "WM_IME_COMPOSITIONFULL";
	if (msgid == 0x0285)return "WM_IME_SELECT";
	if (msgid == 0x0286)return "WM_IME_CHAR";
	if (msgid == 0x0287)return "WM_IME_SYSTEM";
	if (msgid == 0x0288)return "WM_IME_REQUEST";
	if (msgid == 0x0289)return "WM_UNDEF_0x0289";
	if (msgid == 0x028a)return "WM_UNDEF_0x028a";
	if (msgid == 0x028b)return "WM_UNDEF_0x028b";
	if (msgid == 0x028c)return "WM_UNDEF_0x028c";
	if (msgid == 0x028d)return "WM_UNDEF_0x028d";
	if (msgid == 0x028e)return "WM_UNDEF_0x028e";
	if (msgid == 0x028f)return "WM_UNDEF_0x028f";
	if (msgid == 0x0290)return "WM_IME_KEYDOWN";
	if (msgid == 0x0291)return "WM_IME_KEYUP";
	if (msgid == 0x0292)return "WM_UNDEF_0x0292";
	if (msgid == 0x0293)return "WM_UNDEF_0x0293";
	if (msgid == 0x0294)return "WM_UNDEF_0x0294";
	if (msgid == 0x0295)return "WM_UNDEF_0x0295";
	if (msgid == 0x0296)return "WM_UNDEF_0x0296";
	if (msgid == 0x0297)return "WM_UNDEF_0x0297";
	if (msgid == 0x0298)return "WM_UNDEF_0x0298";
	if (msgid == 0x0299)return "WM_UNDEF_0x0299";
	if (msgid == 0x029a)return "WM_UNDEF_0x029a";
	if (msgid == 0x029b)return "WM_UNDEF_0x029b";
	if (msgid == 0x029c)return "WM_UNDEF_0x029c";
	if (msgid == 0x029d)return "WM_UNDEF_0x029d";
	if (msgid == 0x029e)return "WM_UNDEF_0x029e";
	if (msgid == 0x029f)return "WM_KANJILAST";
	if (msgid == 0x02a0)return "WM_NCMOUSEHOVER";
	if (msgid == 0x02a1)return "WM_MOUSEHOVER";
	if (msgid == 0x02a2)return "WM_NCMOUSELEAVE";
	if (msgid == 0x02a3)return "WM_MOUSELEAVE";
	if (msgid == 0x02a4)return "WM_UNDEF_0x02a4";
	if (msgid == 0x02a5)return "WM_UNDEF_0x02a5";
	if (msgid == 0x02a6)return "WM_UNDEF_0x02a6";
	if (msgid == 0x02a7)return "WM_UNDEF_0x02a7";
	if (msgid == 0x02a8)return "WM_UNDEF_0x02a8";
	if (msgid == 0x02a9)return "WM_UNDEF_0x02a9";
	if (msgid == 0x02aa)return "WM_UNDEF_0x02aa";
	if (msgid == 0x02ab)return "WM_UNDEF_0x02ab";
	if (msgid == 0x02ac)return "WM_UNDEF_0x02ac";
	if (msgid == 0x02ad)return "WM_UNDEF_0x02ad";
	if (msgid == 0x02ae)return "WM_UNDEF_0x02ae";
	if (msgid == 0x02af)return "WM_UNDEF_0x02af";
	if (msgid == 0x02b0)return "WM_UNDEF_0x02b0";
	if (msgid == 0x02b1)return "WM_UNDEF_0x02b1";
	if (msgid == 0x02b2)return "WM_UNDEF_0x02b2";
	if (msgid == 0x02b3)return "WM_UNDEF_0x02b3";
	if (msgid == 0x02b4)return "WM_UNDEF_0x02b4";
	if (msgid == 0x02b5)return "WM_UNDEF_0x02b5";
	if (msgid == 0x02b6)return "WM_UNDEF_0x02b6";
	if (msgid == 0x02b7)return "WM_UNDEF_0x02b7";
	if (msgid == 0x02b8)return "WM_UNDEF_0x02b8";
	if (msgid == 0x02b9)return "WM_UNDEF_0x02b9";
	if (msgid == 0x02ba)return "WM_UNDEF_0x02ba";
	if (msgid == 0x02bb)return "WM_UNDEF_0x02bb";
	if (msgid == 0x02bc)return "WM_UNDEF_0x02bc";
	if (msgid == 0x02bd)return "WM_UNDEF_0x02bd";
	if (msgid == 0x02be)return "WM_UNDEF_0x02be";
	if (msgid == 0x02bf)return "WM_UNDEF_0x02bf";
	if (msgid == 0x02c0)return "WM_UNDEF_0x02c0";
	if (msgid == 0x02c1)return "WM_UNDEF_0x02c1";
	if (msgid == 0x02c2)return "WM_UNDEF_0x02c2";
	if (msgid == 0x02c3)return "WM_UNDEF_0x02c3";
	if (msgid == 0x02c4)return "WM_UNDEF_0x02c4";
	if (msgid == 0x02c5)return "WM_UNDEF_0x02c5";
	if (msgid == 0x02c6)return "WM_UNDEF_0x02c6";
	if (msgid == 0x02c7)return "WM_UNDEF_0x02c7";
	if (msgid == 0x02c8)return "WM_UNDEF_0x02c8";
	if (msgid == 0x02c9)return "WM_UNDEF_0x02c9";
	if (msgid == 0x02ca)return "WM_UNDEF_0x02ca";
	if (msgid == 0x02cb)return "WM_UNDEF_0x02cb";
	if (msgid == 0x02cc)return "WM_UNDEF_0x02cc";
	if (msgid == 0x02cd)return "WM_UNDEF_0x02cd";
	if (msgid == 0x02ce)return "WM_UNDEF_0x02ce";
	if (msgid == 0x02cf)return "WM_UNDEF_0x02cf";
	if (msgid == 0x02d0)return "WM_UNDEF_0x02d0";
	if (msgid == 0x02d1)return "WM_UNDEF_0x02d1";
	if (msgid == 0x02d2)return "WM_UNDEF_0x02d2";
	if (msgid == 0x02d3)return "WM_UNDEF_0x02d3";
	if (msgid == 0x02d4)return "WM_UNDEF_0x02d4";
	if (msgid == 0x02d5)return "WM_UNDEF_0x02d5";
	if (msgid == 0x02d6)return "WM_UNDEF_0x02d6";
	if (msgid == 0x02d7)return "WM_UNDEF_0x02d7";
	if (msgid == 0x02d8)return "WM_UNDEF_0x02d8";
	if (msgid == 0x02d9)return "WM_UNDEF_0x02d9";
	if (msgid == 0x02da)return "WM_UNDEF_0x02da";
	if (msgid == 0x02db)return "WM_UNDEF_0x02db";
	if (msgid == 0x02dc)return "WM_UNDEF_0x02dc";
	if (msgid == 0x02dd)return "WM_UNDEF_0x02dd";
	if (msgid == 0x02de)return "WM_UNDEF_0x02de";
	if (msgid == 0x02df)return "WM_UNDEF_0x02df";
	if (msgid == 0x02e0)return "WM_UNDEF_0x02e0";
	if (msgid == 0x02e1)return "WM_UNDEF_0x02e1";
	if (msgid == 0x02e2)return "WM_UNDEF_0x02e2";
	if (msgid == 0x02e3)return "WM_UNDEF_0x02e3";
	if (msgid == 0x02e4)return "WM_UNDEF_0x02e4";
	if (msgid == 0x02e5)return "WM_UNDEF_0x02e5";
	if (msgid == 0x02e6)return "WM_UNDEF_0x02e6";
	if (msgid == 0x02e7)return "WM_UNDEF_0x02e7";
	if (msgid == 0x02e8)return "WM_UNDEF_0x02e8";
	if (msgid == 0x02e9)return "WM_UNDEF_0x02e9";
	if (msgid == 0x02ea)return "WM_UNDEF_0x02ea";
	if (msgid == 0x02eb)return "WM_UNDEF_0x02eb";
	if (msgid == 0x02ec)return "WM_UNDEF_0x02ec";
	if (msgid == 0x02ed)return "WM_UNDEF_0x02ed";
	if (msgid == 0x02ee)return "WM_UNDEF_0x02ee";
	if (msgid == 0x02ef)return "WM_UNDEF_0x02ef";
	if (msgid == 0x02f0)return "WM_UNDEF_0x02f0";
	if (msgid == 0x02f1)return "WM_UNDEF_0x02f1";
	if (msgid == 0x02f2)return "WM_UNDEF_0x02f2";
	if (msgid == 0x02f3)return "WM_UNDEF_0x02f3";
	if (msgid == 0x02f4)return "WM_UNDEF_0x02f4";
	if (msgid == 0x02f5)return "WM_UNDEF_0x02f5";
	if (msgid == 0x02f6)return "WM_UNDEF_0x02f6";
	if (msgid == 0x02f7)return "WM_UNDEF_0x02f7";
	if (msgid == 0x02f8)return "WM_UNDEF_0x02f8";
	if (msgid == 0x02f9)return "WM_UNDEF_0x02f9";
	if (msgid == 0x02fa)return "WM_UNDEF_0x02fa";
	if (msgid == 0x02fb)return "WM_UNDEF_0x02fb";
	if (msgid == 0x02fc)return "WM_UNDEF_0x02fc";
	if (msgid == 0x02fd)return "WM_UNDEF_0x02fd";
	if (msgid == 0x02fe)return "WM_UNDEF_0x02fe";
	if (msgid == 0x02ff)return "WM_UNDEF_0x02ff";
	if (msgid == 0x0300)return "WM_CUT";
	if (msgid == 0x0301)return "WM_COPY";
	if (msgid == 0x0302)return "WM_PASTE";
	if (msgid == 0x0303)return "WM_CLEAR";
	if (msgid == 0x0304)return "WM_UNDO";
	if (msgid == 0x0305)return "WM_RENDERFORMAT";
	if (msgid == 0x0306)return "WM_RENDERALLFORMATS";
	if (msgid == 0x0307)return "WM_DESTROYCLIPBOARD";
	if (msgid == 0x0308)return "WM_DRAWCLIPBOARD";
	if (msgid == 0x0309)return "WM_PAINTCLIPBOARD";
	if (msgid == 0x030a)return "WM_VSCROLLCLIPBOARD";
	if (msgid == 0x030b)return "WM_SIZECLIPBOARD";
	if (msgid == 0x030c)return "WM_ASKCBFORMATNAME";
	if (msgid == 0x030d)return "WM_CHANGECBCHAIN";
	if (msgid == 0x030e)return "WM_HSCROLLCLIPBOARD";
	if (msgid == 0x030f)return "WM_QUERYNEWPALETTE";
	if (msgid == 0x0310)return "WM_PALETTEISCHANGING";
	if (msgid == 0x0311)return "WM_PALETTECHANGED";
	if (msgid == 0x0312)return "WM_HOTKEY";
	if (msgid == 0x0313)return "WM_HOOKMSG";
	if (msgid == 0x0314)return "WM_SYSMENU";
	if (msgid == 0x0315)return "WM_EXITPROCESS";
	if (msgid == 0x0316)return "WM_WAKETHREAD";
	if (msgid == 0x0317)return "WM_PRINT";
	if (msgid == 0x0318)return "WM_PRINTCLIENT";
	if (msgid == 0x0319)return "WM_APPCOMMAND";
	if (msgid == 0x031a)return "WM_THEMECHANGED";
	if (msgid == 0x031b)return "WM_UAHINIT";
	if (msgid == 0x031c)return "WM_UNDEF_0x031c";
	if (msgid == 0x031d)return "WM_UNDEF_0x031d";
	if (msgid == 0x031e)return "WM_UNDEF_0x031e";
	if (msgid == 0x031f)return "WM_UNDEF_0x031f";
	if (msgid == 0x0320)return "WM_UNDEF_0x0320";
	if (msgid == 0x0321)return "WM_UNDEF_0x0321";
	if (msgid == 0x0322)return "WM_UNDEF_0x0322";
	if (msgid == 0x0323)return "WM_UNDEF_0x0323";
	if (msgid == 0x0324)return "WM_UNDEF_0x0324";
	if (msgid == 0x0325)return "WM_UNDEF_0x0325";
	if (msgid == 0x0326)return "WM_UNDEF_0x0326";
	if (msgid == 0x0327)return "WM_UNDEF_0x0327";
	if (msgid == 0x0328)return "WM_UNDEF_0x0328";
	if (msgid == 0x0329)return "WM_UNDEF_0x0329";
	if (msgid == 0x032a)return "WM_UNDEF_0x032a";
	if (msgid == 0x032b)return "WM_UNDEF_0x032b";
	if (msgid == 0x032c)return "WM_UNDEF_0x032c";
	if (msgid == 0x032d)return "WM_UNDEF_0x032d";
	if (msgid == 0x032e)return "WM_UNDEF_0x032e";
	if (msgid == 0x032f)return "WM_UNDEF_0x032f";
	if (msgid == 0x0330)return "WM_UNDEF_0x0330";
	if (msgid == 0x0331)return "WM_UNDEF_0x0331";
	if (msgid == 0x0332)return "WM_UNDEF_0x0332";
	if (msgid == 0x0333)return "WM_UNDEF_0x0333";
	if (msgid == 0x0334)return "WM_UNDEF_0x0334";
	if (msgid == 0x0335)return "WM_UNDEF_0x0335";
	if (msgid == 0x0336)return "WM_UNDEF_0x0336";
	if (msgid == 0x0337)return "WM_UNDEF_0x0337";
	if (msgid == 0x0338)return "WM_UNDEF_0x0338";
	if (msgid == 0x0339)return "WM_UNDEF_0x0339";
	if (msgid == 0x033a)return "WM_UNDEF_0x033a";
	if (msgid == 0x033b)return "WM_UNDEF_0x033b";
	if (msgid == 0x033c)return "WM_UNDEF_0x033c";
	if (msgid == 0x033d)return "WM_UNDEF_0x033d";
	if (msgid == 0x033e)return "WM_UNDEF_0x033e";
	if (msgid == 0x033f)return "WM_UNDEF_0x033f";
	if (msgid == 0x0340)return "WM_NOTIFYWOW";
	if (msgid == 0x0341)return "WM_UNDEF_0x0341";
	if (msgid == 0x0342)return "WM_UNDEF_0x0342";
	if (msgid == 0x0343)return "WM_UNDEF_0x0343";
	if (msgid == 0x0344)return "WM_UNDEF_0x0344";
	if (msgid == 0x0345)return "WM_UNDEF_0x0345";
	if (msgid == 0x0346)return "WM_UNDEF_0x0346";
	if (msgid == 0x0347)return "WM_UNDEF_0x0347";
	if (msgid == 0x0348)return "WM_UNDEF_0x0348";
	if (msgid == 0x0349)return "WM_UNDEF_0x0349";
	if (msgid == 0x034a)return "WM_UNDEF_0x034a";
	if (msgid == 0x034b)return "WM_UNDEF_0x034b";
	if (msgid == 0x034c)return "WM_UNDEF_0x034c";
	if (msgid == 0x034d)return "WM_UNDEF_0x034d";
	if (msgid == 0x034e)return "WM_UNDEF_0x034e";
	if (msgid == 0x034f)return "WM_UNDEF_0x034f";
	if (msgid == 0x0350)return "WM_UNDEF_0x0350";
	if (msgid == 0x0351)return "WM_UNDEF_0x0351";
	if (msgid == 0x0352)return "WM_UNDEF_0x0352";
	if (msgid == 0x0353)return "WM_UNDEF_0x0353";
	if (msgid == 0x0354)return "WM_UNDEF_0x0354";
	if (msgid == 0x0355)return "WM_UNDEF_0x0355";
	if (msgid == 0x0356)return "WM_UNDEF_0x0356";
	if (msgid == 0x0357)return "WM_UNDEF_0x0357";
	if (msgid == 0x0358)return "WM_UNDEF_0x0358";
	if (msgid == 0x0359)return "WM_UNDEF_0x0359";
	if (msgid == 0x035a)return "WM_UNDEF_0x035a";
	if (msgid == 0x035b)return "WM_UNDEF_0x035b";
	if (msgid == 0x035c)return "WM_UNDEF_0x035c";
	if (msgid == 0x035d)return "WM_UNDEF_0x035d";
	if (msgid == 0x035e)return "WM_UNDEF_0x035e";
	if (msgid == 0x035f)return "WM_UNDEF_0x035f";
	if (msgid == 0x0360)return "WM_QUERYAFXWNDPROC";
	if (msgid == 0x0361)return "WM_SIZEPARENT";
	if (msgid == 0x0362)return "WM_SETMESSAGESTRING";
	if (msgid == 0x0363)return "WM_IDLEUPDATECMDUI";
	if (msgid == 0x0364)return "WM_INITIALUPDATE";
	if (msgid == 0x0365)return "WM_COMMANDHELP";
	if (msgid == 0x0366)return "WM_HELPHITTEST";
	if (msgid == 0x0367)return "WM_EXITHELPMODE";
	if (msgid == 0x0368)return "WM_RECALCPARENT";
	if (msgid == 0x0369)return "WM_SIZECHILD";
	if (msgid == 0x036A)return "WM_KICKIDLE";
	if (msgid == 0x036B)return "WM_QUERYCENTERWND";
	if (msgid == 0x036C)return "WM_DISABLEMODAL";
	if (msgid == 0x036D)return "WM_FLOATSTATUS";
	if (msgid == 0x036E)return "WM_ACTIVATETOPLEVEL";
	if (msgid == 0x036F)return "WM_QUERY3DCONTROLS";
	if (msgid == 0x0370)return "WM_UNDEF_0x0370";
	if (msgid == 0x0371)return "WM_UNDEF_0x0371";
	if (msgid == 0x0372)return "WM_UNDEF_0x0372";
	if (msgid == 0x0373)return "WM_SOCKET_NOTIFY";
	if (msgid == 0x0374)return "WM_SOCKET_DEAD";
	if (msgid == 0x0375)return "WM_POPMESSAGESTRING";
	if (msgid == 0x0376)return "WM_OCC_LOADFROMSTREAM";
	if (msgid == 0x0377)return "WM_OCC_LOADFROMSTORAGE";
	if (msgid == 0x0378)return "WM_OCC_INITNEW";
	if (msgid == 0x0379)return "WM_QUEUE_SENTINEL";
	if (msgid == 0x037A)return "WM_OCC_LOADFROMSTREAM_EX";
	if (msgid == 0x037B)return "WM_OCC_LOADFROMSTORAGE_EX";
	if (msgid == 0x037c)return "WM_UNDEF_0x037c";
	if (msgid == 0x037d)return "WM_UNDEF_0x037d";
	if (msgid == 0x037e)return "WM_UNDEF_0x037e";
	if (msgid == 0x037f)return "WM_UNDEF_0x037f";
	if (msgid == 0x0380)return "WM_PENWINFIRST";
	if (msgid == 0x0381)return "WM_RCRESULT";
	if (msgid == 0x0382)return "WM_HOOKRCRESULT";
	if (msgid == 0x0383)return "WM_GLOBALRCCHANGE";
	if (msgid == 0x0384)return "WM_SKB";
	if (msgid == 0x0385)return "WM_HEDITCTL";
	if (msgid == 0x0386)return "WM_UNDEF_0x0386";
	if (msgid == 0x0387)return "WM_UNDEF_0x0387";
	if (msgid == 0x0388)return "WM_UNDEF_0x0388";
	if (msgid == 0x0389)return "WM_UNDEF_0x0389";
	if (msgid == 0x038a)return "WM_UNDEF_0x038a";
	if (msgid == 0x038b)return "WM_UNDEF_0x038b";
	if (msgid == 0x038c)return "WM_UNDEF_0x038c";
	if (msgid == 0x038d)return "WM_UNDEF_0x038d";
	if (msgid == 0x038e)return "WM_UNDEF_0x038e";
	if (msgid == 0x038f)return "WM_PENWINLAST";
	if (msgid == 0x0390)return "WM_COALESCE_FIRST";
	if (msgid == 0x0391)return "WM_UNDEF_0x0391";
	if (msgid == 0x0392)return "WM_UNDEF_0x0392";
	if (msgid == 0x0393)return "WM_UNDEF_0x0393";
	if (msgid == 0x0394)return "WM_UNDEF_0x0394";
	if (msgid == 0x0395)return "WM_UNDEF_0x0395";
	if (msgid == 0x0396)return "WM_UNDEF_0x0396";
	if (msgid == 0x0397)return "WM_UNDEF_0x0397";
	if (msgid == 0x0398)return "WM_UNDEF_0x0398";
	if (msgid == 0x0399)return "WM_UNDEF_0x0399";
	if (msgid == 0x039a)return "WM_UNDEF_0x039a";
	if (msgid == 0x039b)return "WM_UNDEF_0x039b";
	if (msgid == 0x039c)return "WM_UNDEF_0x039c";
	if (msgid == 0x039d)return "WM_UNDEF_0x039d";
	if (msgid == 0x039e)return "WM_UNDEF_0x039e";
	if (msgid == 0x039f)return "WM_COALESCE_LAST";
	if (msgid == 0x03a0)return "MM_JOY1MOVE";
	if (msgid == 0x03a1)return "MM_JOY2MOVE";
	if (msgid == 0x03a2)return "MM_JOY1ZMOVE";
	if (msgid == 0x03a3)return "MM_JOY2ZMOVE";
	if (msgid == 0x03a4)return "WM_UNDEF_0x03a4";
	if (msgid == 0x03a5)return "WM_UNDEF_0x03a5";
	if (msgid == 0x03a6)return "WM_UNDEF_0x03a6";
	if (msgid == 0x03a7)return "WM_UNDEF_0x03a7";
	if (msgid == 0x03a8)return "WM_UNDEF_0x03a8";
	if (msgid == 0x03a9)return "WM_UNDEF_0x03a9";
	if (msgid == 0x03aa)return "WM_UNDEF_0x03aa";
	if (msgid == 0x03ab)return "WM_UNDEF_0x03ab";
	if (msgid == 0x03ac)return "WM_UNDEF_0x03ac";
	if (msgid == 0x03ad)return "WM_UNDEF_0x03ad";
	if (msgid == 0x03ae)return "WM_UNDEF_0x03ae";
	if (msgid == 0x03af)return "WM_UNDEF_0x03af";
	if (msgid == 0x03b0)return "WM_UNDEF_0x03b0";
	if (msgid == 0x03b1)return "WM_UNDEF_0x03b1";
	if (msgid == 0x03b2)return "WM_UNDEF_0x03b2";
	if (msgid == 0x03b3)return "WM_UNDEF_0x03b3";
	if (msgid == 0x03b4)return "WM_UNDEF_0x03b4";
	if (msgid == 0x03b5)return "MM_JOY1BUTTONDOWN";
	if (msgid == 0x03b6)return "MM_JOY2BUTTONDOWN";
	if (msgid == 0x03b7)return "MM_JOY1BUTTONUP";
	if (msgid == 0x03b8)return "MM_JOY2BUTTONUP";
	if (msgid == 0x03b9)return "MM_MCINOTIFY";
	if (msgid == 0x03ba)return "WM_UNDEF_0x03ba";
	if (msgid == 0x03bb)return "MM_WOM_OPEN";
	if (msgid == 0x03bc)return "MM_WOM_CLOSE";
	if (msgid == 0x03bd)return "MM_WOM_DONE";
	if (msgid == 0x03be)return "MM_WIM_OPEN";
	if (msgid == 0x03bf)return "MM_WIM_CLOSE";
	if (msgid == 0x03c0)return "MM_WIM_DATA";
	if (msgid == 0x03c1)return "MM_MIM_OPEN";
	if (msgid == 0x03c2)return "MM_MIM_CLOSE";
	if (msgid == 0x03c3)return "MM_MIM_DATA";
	if (msgid == 0x03c4)return "MM_MIM_LONGDATA";
	if (msgid == 0x03c5)return "MM_MIM_ERROR";
	if (msgid == 0x03c6)return "MM_MIM_LONGERROR";
	if (msgid == 0x03c7)return "MM_MOM_OPEN";
	if (msgid == 0x03c8)return "MM_MOM_CLOSE";
	if (msgid == 0x03c9)return "MM_MOM_DONE";
	if (msgid == 0x03ca)return "WM_UNDEF_0x03ca";
	if (msgid == 0x03cb)return "WM_UNDEF_0x03cb";
	if (msgid == 0x03cc)return "WM_UNDEF_0x03cc";
	if (msgid == 0x03cd)return "WM_UNDEF_0x03cd";
	if (msgid == 0x03ce)return "WM_UNDEF_0x03ce";
	if (msgid == 0x03cf)return "WM_UNDEF_0x03cf";
	if (msgid == 0x03d0)return "WM_UNDEF_0x03d0";
	if (msgid == 0x03d1)return "WM_UNDEF_0x03d1";
	if (msgid == 0x03d2)return "WM_UNDEF_0x03d2";
	if (msgid == 0x03d3)return "WM_UNDEF_0x03d3";
	if (msgid == 0x03d4)return "WM_UNDEF_0x03d4";
	if (msgid == 0x03d5)return "WM_UNDEF_0x03d5";
	if (msgid == 0x03d6)return "WM_UNDEF_0x03d6";
	if (msgid == 0x03d7)return "WM_UNDEF_0x03d7";
	if (msgid == 0x03d8)return "WM_UNDEF_0x03d8";
	if (msgid == 0x03d9)return "WM_UNDEF_0x03d9";
	if (msgid == 0x03da)return "WM_UNDEF_0x03da";
	if (msgid == 0x03db)return "WM_UNDEF_0x03db";
	if (msgid == 0x03dc)return "WM_UNDEF_0x03dc";
	if (msgid == 0x03dd)return "WM_UNDEF_0x03dd";
	if (msgid == 0x03de)return "WM_UNDEF_0x03de";
	if (msgid == 0x03df)return "WM_MM_RESERVED_LAST";
	if (msgid == 0x3E0)return "WM_DDE_INITIATE";
	if (msgid == 0x3E1)return "WM_DDE_TERMINATE";
	if (msgid == 0x3E2)return "WM_DDE_ADVISE";
	if (msgid == 0x3E3)return "WM_DDE_UNADVISE";
	if (msgid == 0x3E4)return "WM_DDE_ACK";
	if (msgid == 0x3E5)return "WM_DDE_DATA";
	if (msgid == 0x3E6)return "WM_DDE_REQUEST";
	if (msgid == 0x3E7)return "WM_DDE_POKE";
	if (msgid == 0x3E8)return "WM_DDE_EXECUTE";
	if (msgid == 0x03e9)return "WM_UNDEF_0x03e9";
	if (msgid == 0x03ea)return "WM_UNDEF_0x03ea";
	if (msgid == 0x03eb)return "WM_UNDEF_0x03eb";
	if (msgid == 0x03ec)return "WM_UNDEF_0x03ec";
	if (msgid == 0x03ed)return "WM_UNDEF_0x03ed";
	if (msgid == 0x03ee)return "WM_UNDEF_0x03ee";
	if (msgid == 0x03ef)return "WM_UNDEF_0x03ef";
	if (msgid == 0x03f0)return "WM_CBT_RESERVED_FIRST";
	if (msgid == 0x03f1)return "WM_UNDEF_0x03f1";
	if (msgid == 0x03f2)return "WM_UNDEF_0x03f2";
	if (msgid == 0x03f3)return "WM_UNDEF_0x03f3";
	if (msgid == 0x03f4)return "WM_UNDEF_0x03f4";
	if (msgid == 0x03f5)return "WM_UNDEF_0x03f5";
	if (msgid == 0x03f6)return "WM_UNDEF_0x03f6";
	if (msgid == 0x03f7)return "WM_UNDEF_0x03f7";
	if (msgid == 0x03f8)return "WM_UNDEF_0x03f8";
	if (msgid == 0x03f9)return "WM_UNDEF_0x03f9";
	if (msgid == 0x03fa)return "WM_UNDEF_0x03fa";
	if (msgid == 0x03fb)return "WM_UNDEF_0x03fb";
	if (msgid == 0x03fc)return "WM_UNDEF_0x03fc";
	if (msgid == 0x03fd)return "WM_UNDEF_0x03fd";
	if (msgid == 0x03fe)return "WM_UNDEF_0x03fe";
	if (msgid == 0x03ff)return "WM_CBT_RESERVED_LAST";
	if (msgid == 0x0400)return "WM_USER";

	return form("WM_USER_%#04lx", msgid);
}

static DefineMsgIDEnum()
{
	auto idx, name;
	name = "AFX_MSG_ID";
	idx = GetEnum(name);
	if (idx != -1){
		return idx;
	}

	idx = AddEnum(GetEnumQty(), name, 0x1100000);
	if ( idx == -1 )
	{
		Warning("无法创建枚举体（%s）。\n", name);
		return 0;
	}

	AddEnumsMember(idx, "WM_NULL", 0x0000);
	AddEnumsMember(idx, "WM_CREATE", 0x0001);
	AddEnumsMember(idx, "WM_DESTROY", 0x0002);
	AddEnumsMember(idx, "WM_MOVE", 0x0003);
	AddEnumsMember(idx, "WM_SIZEWAIT", 0x0004);
	AddEnumsMember(idx, "WM_SIZE", 0x0005);
	AddEnumsMember(idx, "WM_ACTIVATE", 0x0006);
	AddEnumsMember(idx, "WM_SETFOCUS", 0x0007);
	AddEnumsMember(idx, "WM_KILLFOCUS", 0x0008);
	AddEnumsMember(idx, "WM_SETVISIBLE", 0x0009);
	AddEnumsMember(idx, "WM_ENABLE", 0x000a);
	AddEnumsMember(idx, "WM_SETREDRAW", 0x000b);
	AddEnumsMember(idx, "WM_SETTEXT", 0x000c);
	AddEnumsMember(idx, "WM_GETTEXT", 0x000d);
	AddEnumsMember(idx, "WM_GETTEXTLENGTH", 0x000e);
	AddEnumsMember(idx, "WM_PAINT", 0x000f);
	AddEnumsMember(idx, "WM_CLOSE", 0x0010);
	AddEnumsMember(idx, "WM_QUERYENDSESSION", 0x0011);
	AddEnumsMember(idx, "WM_QUIT", 0x0012);
	AddEnumsMember(idx, "WM_QUERYOPEN", 0x0013);
	AddEnumsMember(idx, "WM_ERASEBKGND", 0x0014);
	AddEnumsMember(idx, "WM_SYSCOLORCHANGE", 0x0015);
	AddEnumsMember(idx, "WM_ENDSESSION", 0x0016);
	AddEnumsMember(idx, "WM_SYSTEMERROR", 0x0017);
	AddEnumsMember(idx, "WM_SHOWWINDOW", 0x0018);
	AddEnumsMember(idx, "WM_CTLCOLOR", 0x0019);
	AddEnumsMember(idx, "WM_WININICHANGE", 0x001a);
	AddEnumsMember(idx, "WM_DEVMODECHANGE", 0x001b);
	AddEnumsMember(idx, "WM_ACTIVATEAPP", 0x001c);
	AddEnumsMember(idx, "WM_FONTCHANGE", 0x001d);
	AddEnumsMember(idx, "WM_TIMECHANGE", 0x001e);
	AddEnumsMember(idx, "WM_CANCELMODE", 0x001f);
	AddEnumsMember(idx, "WM_SETCURSOR", 0x0020);
	AddEnumsMember(idx, "WM_MOUSEACTIVATE", 0x0021);
	AddEnumsMember(idx, "WM_CHILDACTIVATE", 0x0022);
	AddEnumsMember(idx, "WM_QUEUESYNC", 0x0023);
	AddEnumsMember(idx, "WM_GETMINMAXINFO", 0x0024);
	AddEnumsMember(idx, "WM_LOGOFF", 0x0025);
	AddEnumsMember(idx, "WM_PAINTICON", 0x0026);
	AddEnumsMember(idx, "WM_ICONERASEBKGND", 0x0027);
	AddEnumsMember(idx, "WM_NEXTDLGCTL", 0x0028);
	AddEnumsMember(idx, "WM_ALTTABACTIVE", 0x0029);
	AddEnumsMember(idx, "WM_SPOOLERSTATUS", 0x002a);
	AddEnumsMember(idx, "WM_DRAWITEM", 0x002b);
	AddEnumsMember(idx, "WM_MEASUREITEM", 0x002c);
	AddEnumsMember(idx, "WM_DELETEITEM", 0x002d);
	AddEnumsMember(idx, "WM_VKEYTOITEM", 0x002e);
	AddEnumsMember(idx, "WM_CHARTOITEM", 0x002f);
	AddEnumsMember(idx, "WM_SETFONT", 0x0030);
	AddEnumsMember(idx, "WM_GETFONT", 0x0031);
	AddEnumsMember(idx, "WM_SETHOTKEY", 0x0032);
	AddEnumsMember(idx, "WM_GETHOTKEY", 0x0033);
	AddEnumsMember(idx, "WM_FILESYSCHANGE", 0x0034);
	AddEnumsMember(idx, "WM_ISACTIVEICON", 0x0035);
	AddEnumsMember(idx, "WM_QUERYPARKICON", 0x0036);
	AddEnumsMember(idx, "WM_QUERYDRAGICON", 0x0037);
	AddEnumsMember(idx, "WM_WINHELP", 0x0038);
	AddEnumsMember(idx, "WM_COMPAREITEM", 0x0039);
	AddEnumsMember(idx, "WM_FULLSCREEN", 0x003a);
	AddEnumsMember(idx, "WM_CLIENTSHUTDOWN", 0x003b);
	AddEnumsMember(idx, "WM_DDEMLEVENT", 0x003c);
	AddEnumsMember(idx, "WM_GETOBJECT", 0x003d);
	AddEnumsMember(idx, "WM_UNDEF_0x003e", 0x003e);
	AddEnumsMember(idx, "WM_CALCSCROLL", 0x003f);
	AddEnumsMember(idx, "WM_TESTING", 0x0040);
	AddEnumsMember(idx, "WM_COMPACTING", 0x0041);
	AddEnumsMember(idx, "WM_OTHERWINDOWCREATED", 0x0042);
	AddEnumsMember(idx, "WM_OTHERWINDOWDESTROYED", 0x0043);
	AddEnumsMember(idx, "WM_COMMNOTIFY", 0x0044);
	AddEnumsMember(idx, "WM_MEDIASTATUSCHANGE", 0x0045);
	AddEnumsMember(idx, "WM_WINDOWPOSCHANGING", 0x0046);
	AddEnumsMember(idx, "WM_WINDOWPOSCHANGED", 0x0047);
	AddEnumsMember(idx, "WM_POWER", 0x0048);
	AddEnumsMember(idx, "WM_COPYGLOBALDATA", 0x0049);
	AddEnumsMember(idx, "WM_COPYDATA", 0x004a);
	AddEnumsMember(idx, "WM_CANCELJOURNAL", 0x004b);
	AddEnumsMember(idx, "WM_LOGONNOTIFY", 0x004c);
	AddEnumsMember(idx, "WM_KEYF1", 0x004d);
	AddEnumsMember(idx, "WM_NOTIFY", 0x004e);
	AddEnumsMember(idx, "WM_ACCESS_WINDOW", 0x004f);
	AddEnumsMember(idx, "WM_INPUTLANGCHANGEREQUEST", 0x0050);
	AddEnumsMember(idx, "WM_INPUTLANGCHANGE", 0x0051);
	AddEnumsMember(idx, "WM_TCARD", 0x0052);
	AddEnumsMember(idx, "WM_HELP", 0x0053);
	AddEnumsMember(idx, "WM_USERCHANGED", 0x0054);
	AddEnumsMember(idx, "WM_NOTIFYFORMAT", 0x0055);
	AddEnumsMember(idx, "WM_UNDEF_0x0056", 0x0056);
	AddEnumsMember(idx, "WM_UNDEF_0x0057", 0x0057);
	AddEnumsMember(idx, "WM_UNDEF_0x0058", 0x0058);
	AddEnumsMember(idx, "WM_UNDEF_0x0059", 0x0059);
	AddEnumsMember(idx, "WM_UNDEF_0x005a", 0x005a);
	AddEnumsMember(idx, "WM_UNDEF_0x005b", 0x005b);
	AddEnumsMember(idx, "WM_UNDEF_0x005c", 0x005c);
	AddEnumsMember(idx, "WM_UNDEF_0x005d", 0x005d);
	AddEnumsMember(idx, "WM_UNDEF_0x005e", 0x005e);
	AddEnumsMember(idx, "WM_UNDEF_0x005f", 0x005f);
	AddEnumsMember(idx, "WM_UNDEF_0x0060", 0x0060);
	AddEnumsMember(idx, "WM_UNDEF_0x0061", 0x0061);
	AddEnumsMember(idx, "WM_UNDEF_0x0062", 0x0062);
	AddEnumsMember(idx, "WM_UNDEF_0x0063", 0x0063);
	AddEnumsMember(idx, "WM_UNDEF_0x0064", 0x0064);
	AddEnumsMember(idx, "WM_UNDEF_0x0065", 0x0065);
	AddEnumsMember(idx, "WM_UNDEF_0x0066", 0x0066);
	AddEnumsMember(idx, "WM_UNDEF_0x0067", 0x0067);
	AddEnumsMember(idx, "WM_UNDEF_0x0068", 0x0068);
	AddEnumsMember(idx, "WM_UNDEF_0x0069", 0x0069);
	AddEnumsMember(idx, "WM_UNDEF_0x006a", 0x006a);
	AddEnumsMember(idx, "WM_UNDEF_0x006b", 0x006b);
	AddEnumsMember(idx, "WM_UNDEF_0x006c", 0x006c);
	AddEnumsMember(idx, "WM_UNDEF_0x006d", 0x006d);
	AddEnumsMember(idx, "WM_UNDEF_0x006e", 0x006e);
	AddEnumsMember(idx, "WM_UNDEF_0x006f", 0x006f);
	AddEnumsMember(idx, "WM_FINALDESTROY", 0x0070);
	AddEnumsMember(idx, "WM_MEASUREITEM_CLIENTDATA", 0x0071);
	AddEnumsMember(idx, "WM_TASKACTIVATED", 0x0072);
	AddEnumsMember(idx, "WM_TASKDEACTIVATED", 0x0073);
	AddEnumsMember(idx, "WM_TASKCREATED", 0x0074);
	AddEnumsMember(idx, "WM_TASKDESTROYED", 0x0075);
	AddEnumsMember(idx, "WM_TASKUICHANGED", 0x0076);
	AddEnumsMember(idx, "WM_TASKVISIBLE", 0x0077);
	AddEnumsMember(idx, "WM_TASKNOTVISIBLE", 0x0078);
	AddEnumsMember(idx, "WM_SETCURSORINFO", 0x0079);
	AddEnumsMember(idx, "WM_UNDEF_0x007a", 0x007a);
	AddEnumsMember(idx, "WM_CONTEXTMENU", 0x007b);
	AddEnumsMember(idx, "WM_STYLECHANGING", 0x007c);
	AddEnumsMember(idx, "WM_STYLECHANGED", 0x007d);
	AddEnumsMember(idx, "WM_DISPLAYCHANGE", 0x007e);
	AddEnumsMember(idx, "WM_GETICON", 0x007f);
	AddEnumsMember(idx, "WM_SETICON", 0x0080);
	AddEnumsMember(idx, "WM_NCCREATE", 0x0081);
	AddEnumsMember(idx, "WM_NCDESTROY", 0x0082);
	AddEnumsMember(idx, "WM_NCCALCSIZE", 0x0083);
	AddEnumsMember(idx, "WM_NCHITTEST", 0x0084);
	AddEnumsMember(idx, "WM_NCPAINT", 0x0085);
	AddEnumsMember(idx, "WM_NCACTIVATE", 0x0086);
	AddEnumsMember(idx, "WM_GETDLGCODE", 0x0087);
	AddEnumsMember(idx, "WM_SYNCPAINT", 0x0088);
	AddEnumsMember(idx, "WM_SYNCTASK", 0x0089);
	AddEnumsMember(idx, "WM_UNDEF_0x008a", 0x008a);
	AddEnumsMember(idx, "WM_KLUDGEMINRECT", 0x008b);
	AddEnumsMember(idx, "WM_LPKDRAWSWITCHWND", 0x008c);
	AddEnumsMember(idx, "WM_UNDEF_0x008d", 0x008d);
	AddEnumsMember(idx, "WM_UNDEF_0x008e", 0x008e);
	AddEnumsMember(idx, "WM_UNDEF_0x008f", 0x008f);
	AddEnumsMember(idx, "WM_UNDEF_0x0090", 0x0090);
	AddEnumsMember(idx, "WM_UNDEF_0x0091", 0x0091);
	AddEnumsMember(idx, "WM_UNDEF_0x0092", 0x0092);
	AddEnumsMember(idx, "WM_UNDEF_0x0093", 0x0093);
	AddEnumsMember(idx, "WM_UNDEF_0x0094", 0x0094);
	AddEnumsMember(idx, "WM_UNDEF_0x0095", 0x0095);
	AddEnumsMember(idx, "WM_UNDEF_0x0096", 0x0096);
	AddEnumsMember(idx, "WM_UNDEF_0x0097", 0x0097);
	AddEnumsMember(idx, "WM_UNDEF_0x0098", 0x0098);
	AddEnumsMember(idx, "WM_UNDEF_0x0099", 0x0099);
	AddEnumsMember(idx, "WM_UNDEF_0x009a", 0x009a);
	AddEnumsMember(idx, "WM_UNDEF_0x009b", 0x009b);
	AddEnumsMember(idx, "WM_UNDEF_0x009c", 0x009c);
	AddEnumsMember(idx, "WM_UNDEF_0x009d", 0x009d);
	AddEnumsMember(idx, "WM_UNDEF_0x009e", 0x009e);
	AddEnumsMember(idx, "WM_UNDEF_0x009f", 0x009f);
	AddEnumsMember(idx, "WM_NCMOUSEMOVE", 0x00A0);
	AddEnumsMember(idx, "WM_NCLBUTTONDOWN", 0x00A1);
	AddEnumsMember(idx, "WM_NCLBUTTONUP", 0x00A2);
	AddEnumsMember(idx, "WM_NCLBUTTONDBLCLK", 0x00A3);
	AddEnumsMember(idx, "WM_NCRBUTTONDOWN", 0x00A4);
	AddEnumsMember(idx, "WM_NCRBUTTONUP", 0x00A5);
	AddEnumsMember(idx, "WM_NCRBUTTONDBLCLK", 0x00A6);
	AddEnumsMember(idx, "WM_NCMBUTTONDOWN", 0x00A7);
	AddEnumsMember(idx, "WM_NCMBUTTONUP", 0x00A8);
	AddEnumsMember(idx, "WM_NCMBUTTONDBLCLK", 0x00A9);
	AddEnumsMember(idx, "WM_UNDEF_0x00AA", 0x00AA);
	AddEnumsMember(idx, "WM_NCXBUTTONDOWN", 0x00AB);
	AddEnumsMember(idx, "WM_NCXBUTTONUP", 0x00AC);
	AddEnumsMember(idx, "WM_NCXBUTTONDBLCLK", 0x00AD);
	AddEnumsMember(idx, "WM_NCUAHDRAWCAPTION", 0x00AE);
	AddEnumsMember(idx, "WM_NCUAHDRAWFRAME", 0x00AF);
	AddEnumsMember(idx, "EM_GETSEL32", 0x00b0);
	AddEnumsMember(idx, "EM_SETSEL32", 0x00b1);
	AddEnumsMember(idx, "EM_GETRECT32", 0x00b2);
	AddEnumsMember(idx, "EM_SETRECT32", 0x00b3);
	AddEnumsMember(idx, "EM_SETRECTNP32", 0x00b4);
	AddEnumsMember(idx, "EM_SCROLL32", 0x00b5);
	AddEnumsMember(idx, "EM_LINESCROLL32", 0x00b6);
	AddEnumsMember(idx, "EM_SCROLLCARET32", 0x00b7);
	AddEnumsMember(idx, "EM_GETMODIFY32", 0x00b8);
	AddEnumsMember(idx, "EM_SETMODIFY32", 0x00b9);
	AddEnumsMember(idx, "EM_GETLINECOUNT32", 0x00ba);
	AddEnumsMember(idx, "EM_LINEINDEX32", 0x00bb);
	AddEnumsMember(idx, "EM_SETHANDLE32", 0x00bc);
	AddEnumsMember(idx, "EM_GETHANDLE32", 0x00bd);
	AddEnumsMember(idx, "EM_GETTHUMB32", 0x00be);
	AddEnumsMember(idx, "WM_UNDEF_0x00bf", 0x00bf);
	AddEnumsMember(idx, "WM_UNDEF_0x00c0", 0x00c0);
	AddEnumsMember(idx, "EM_LINELENGTH32", 0x00c1);
	AddEnumsMember(idx, "EM_REPLACESEL32", 0x00c2);
	AddEnumsMember(idx, "EM_SETFONT", 0x00c3);
	AddEnumsMember(idx, "EM_GETLINE32", 0x00c4);
	AddEnumsMember(idx, "EM_LIMITTEXT32", 0x00c5);
	AddEnumsMember(idx, "EM_CANUNDO32", 0x00c6);
	AddEnumsMember(idx, "EM_UNDO32", 0x00c7);
	AddEnumsMember(idx, "EM_FMTLINES32", 0x00c8);
	AddEnumsMember(idx, "EM_LINEFROMCHAR32", 0x00c9);
	AddEnumsMember(idx, "EM_SETWORDBREAK", 0x00ca);
	AddEnumsMember(idx, "EM_SETTABSTOPS32", 0x00cb);
	AddEnumsMember(idx, "EM_SETPASSWORDCHAR32", 0x00cc);
	AddEnumsMember(idx, "EM_EMPTYUNDOBUFFER32", 0x00cd);
	AddEnumsMember(idx, "EM_GETFIRSTVISIBLELINE32", 0x00ce);
	AddEnumsMember(idx, "EM_SETREADONLY32", 0x00cf);
	AddEnumsMember(idx, "EM_SETWORDBREAKPROC32", 0x00d0);
	AddEnumsMember(idx, "EM_GETWORDBREAKPROC32", 0x00d1);
	AddEnumsMember(idx, "EM_GETPASSWORDCHAR32", 0x00d2);
	AddEnumsMember(idx, "EM_SETMARGINS32", 0x00d3);
	AddEnumsMember(idx, "EM_GETMARGINS32", 0x00d4);
	AddEnumsMember(idx, "EM_GETLIMITTEXT32", 0x00d5);
	AddEnumsMember(idx, "EM_POSFROMCHAR32", 0x00d6);
	AddEnumsMember(idx, "EM_CHARFROMPOS32", 0x00d7);
	AddEnumsMember(idx, "EM_SETIMESTATUS", 0x00D8);
	AddEnumsMember(idx, "EM_GETIMESTATUS", 0x00D9);
	AddEnumsMember(idx, "EM_MSGMAX", 0x00DA);
	AddEnumsMember(idx, "WM_UNDEF_0x00DB", 0x00DB);
	AddEnumsMember(idx, "WM_UNDEF_0x00DC", 0x00DC);
	AddEnumsMember(idx, "WM_UNDEF_0x00DD", 0x00DD);
	AddEnumsMember(idx, "WM_UNDEF_0x00DE", 0x00DE);
	AddEnumsMember(idx, "WM_UNDEF_0x00DF", 0x00DF);
	AddEnumsMember(idx, "SBM_SETPOS32", 0x00e0);
	AddEnumsMember(idx, "SBM_GETPOS32", 0x00e1);
	AddEnumsMember(idx, "SBM_SETRANGE32", 0x00e2);
	AddEnumsMember(idx, "SBM_GETRANGE32", 0x00e3);
	AddEnumsMember(idx, "SBM_ENABLE_ARROWS32", 0x00e4);
	AddEnumsMember(idx, "WM_UNDEF_0x00e5", 0x00e5);
	AddEnumsMember(idx, "SBM_SETRANGEREDRAW32", 0x00e6);
	AddEnumsMember(idx, "WM_UNDEF_0x00e7", 0x00e7);
	AddEnumsMember(idx, "WM_UNDEF_0x00e8", 0x00e8);
	AddEnumsMember(idx, "SBM_SETSCROLLINFO32", 0x00e9);
	AddEnumsMember(idx, "SBM_GETSCROLLINFO32", 0x00ea);
	AddEnumsMember(idx, "WM_UNDEF_0x00eb", 0x00eb);
	AddEnumsMember(idx, "WM_UNDEF_0x00ec", 0x00ec);
	AddEnumsMember(idx, "WM_UNDEF_0x00ed", 0x00ed);
	AddEnumsMember(idx, "WM_UNDEF_0x00ee", 0x00ee);
	AddEnumsMember(idx, "WM_UNDEF_0x00ef", 0x00ef);
	AddEnumsMember(idx, "BM_GETCHECK32", 0x00f0);
	AddEnumsMember(idx, "BM_SETCHECK32", 0x00f1);
	AddEnumsMember(idx, "BM_GETSTATE32", 0x00f2);
	AddEnumsMember(idx, "BM_SETSTATE32", 0x00f3);
	AddEnumsMember(idx, "BM_SETSTYLE32", 0x00f4);
	AddEnumsMember(idx, "BM_CLICK32", 0x00f5);
	AddEnumsMember(idx, "BM_GETIMAGE32", 0x00f6);
	AddEnumsMember(idx, "BM_SETIMAGE32", 0x00f7);
	AddEnumsMember(idx, "WM_UNDEF_0x00f8", 0x00f8);
	AddEnumsMember(idx, "WM_UNDEF_0x00f9", 0x00f9);
	AddEnumsMember(idx, "WM_UNDEF_0x00fa", 0x00fa);
	AddEnumsMember(idx, "WM_UNDEF_0x00fb", 0x00fb);
	AddEnumsMember(idx, "WM_UNDEF_0x00fc", 0x00fc);
	AddEnumsMember(idx, "WM_UNDEF_0x00fd", 0x00fd);
	AddEnumsMember(idx, "WM_UNDEF_0x00fe", 0x00fe);
	AddEnumsMember(idx, "WM_INPUT", 0x00ff);
	AddEnumsMember(idx, "WM_KEYDOWN", 0x0100);
	AddEnumsMember(idx, "WM_KEYUP", 0x0101);
	AddEnumsMember(idx, "WM_CHAR", 0x0102);
	AddEnumsMember(idx, "WM_DEADCHAR", 0x0103);
	AddEnumsMember(idx, "WM_SYSKEYDOWN", 0x0104);
	AddEnumsMember(idx, "WM_SYSKEYUP", 0x0105);
	AddEnumsMember(idx, "WM_SYSCHAR", 0x0106);
	AddEnumsMember(idx, "WM_SYSDEADCHAR", 0x0107);
	AddEnumsMember(idx, "WM_YOMICHAR", 0x0108);
	AddEnumsMember(idx, "WM_UNICHAR", 0x0109);
	AddEnumsMember(idx, "WM_CONVERTREQUEST", 0x010a);
	AddEnumsMember(idx, "WM_CONVERTRESULT", 0x010b);
	AddEnumsMember(idx, "WM_INTERIM", 0x010c);
	AddEnumsMember(idx, "WM_IME_STARTCOMPOSITION", 0x010d);
	AddEnumsMember(idx, "WM_IME_ENDCOMPOSITION", 0x010e);
	AddEnumsMember(idx, "WM_IME_COMPOSITION", 0x010f);
	AddEnumsMember(idx, "WM_INITDIALOG", 0x0110);
	AddEnumsMember(idx, "WM_COMMAND", 0x0111);
	AddEnumsMember(idx, "WM_SYSCOMMAND", 0x0112);
	AddEnumsMember(idx, "WM_TIMER", 0x0113);
	AddEnumsMember(idx, "WM_HSCROLL", 0x0114);
	AddEnumsMember(idx, "WM_VSCROLL", 0x0115);
	AddEnumsMember(idx, "WM_INITMENU", 0x0116);
	AddEnumsMember(idx, "WM_INITMENUPOPUP", 0x0117);
	AddEnumsMember(idx, "WM_SYSTIMER", 0x0118);
	AddEnumsMember(idx, "WM_UNDEF_0x0119", 0x0119);
	AddEnumsMember(idx, "WM_UNDEF_0x011a", 0x011a);
	AddEnumsMember(idx, "WM_UNDEF_0x011b", 0x011b);
	AddEnumsMember(idx, "WM_UNDEF_0x011c", 0x011c);
	AddEnumsMember(idx, "WM_UNDEF_0x011d", 0x011d);
	AddEnumsMember(idx, "WM_UNDEF_0x011e", 0x011e);
	AddEnumsMember(idx, "WM_MENUSELECT", 0x011f);
	AddEnumsMember(idx, "WM_MENUCHAR", 0x0120);
	AddEnumsMember(idx, "WM_ENTERIDLE", 0x0121);
	AddEnumsMember(idx, "WM_MENURBUTTONUP", 0x0122);
	AddEnumsMember(idx, "WM_MENUDRAG", 0x0123);
	AddEnumsMember(idx, "WM_MENUGETOBJECT", 0x0124);
	AddEnumsMember(idx, "WM_UNINITMENUPOPUP", 0x0125);
	AddEnumsMember(idx, "WM_MENUCOMMAND", 0x0126);
	AddEnumsMember(idx, "WM_CHANGEUISTATE", 0x0127);
	AddEnumsMember(idx, "WM_UPDATEUISTATE", 0x0128);
	AddEnumsMember(idx, "WM_QUERYUISTATE", 0x0129);
	AddEnumsMember(idx, "WM_UNDEF_0x012a", 0x012a);
	AddEnumsMember(idx, "WM_UNDEF_0x012b", 0x012b);
	AddEnumsMember(idx, "WM_UNDEF_0x012c", 0x012c);
	AddEnumsMember(idx, "WM_UNDEF_0x012d", 0x012d);
	AddEnumsMember(idx, "WM_UNDEF_0x012e", 0x012e);
	AddEnumsMember(idx, "WM_UNDEF_0x012f", 0x012f);
	AddEnumsMember(idx, "WM_UNDEF_0x0130", 0x0130);
	AddEnumsMember(idx, "WM_LBTRACKPOINT", 0x0131);
	AddEnumsMember(idx, "WM_CTLCOLORMSGBOX", 0x0132);
	AddEnumsMember(idx, "WM_CTLCOLOREDIT", 0x0133);
	AddEnumsMember(idx, "WM_CTLCOLORLISTBOX", 0x0134);
	AddEnumsMember(idx, "WM_CTLCOLORBTN", 0x0135);
	AddEnumsMember(idx, "WM_CTLCOLORDLG", 0x0136);
	AddEnumsMember(idx, "WM_CTLCOLORSCROLLBAR", 0x0137);
	AddEnumsMember(idx, "WM_CTLCOLORSTATIC", 0x0138);
	AddEnumsMember(idx, "WM_UNDEF_0x0139", 0x0139);
	AddEnumsMember(idx, "WM_UNDEF_0x013a", 0x013a);
	AddEnumsMember(idx, "WM_UNDEF_0x013b", 0x013b);
	AddEnumsMember(idx, "WM_UNDEF_0x013c", 0x013c);
	AddEnumsMember(idx, "WM_UNDEF_0x013d", 0x013d);
	AddEnumsMember(idx, "WM_UNDEF_0x013e", 0x013e);
	AddEnumsMember(idx, "WM_UNDEF_0x013f", 0x013f);
	AddEnumsMember(idx, "CB_GETEDITSEL32", 0x0140);
	AddEnumsMember(idx, "CB_LIMITTEXT32", 0x0141);
	AddEnumsMember(idx, "CB_SETEDITSEL32", 0x0142);
	AddEnumsMember(idx, "CB_ADDSTRING32", 0x0143);
	AddEnumsMember(idx, "CB_DELETESTRING32", 0x0144);
	AddEnumsMember(idx, "CB_DIR32", 0x0145);
	AddEnumsMember(idx, "CB_GETCOUNT32", 0x0146);
	AddEnumsMember(idx, "CB_GETCURSEL32", 0x0147);
	AddEnumsMember(idx, "CB_GETLBTEXT32", 0x0148);
	AddEnumsMember(idx, "CB_GETLBTEXTLEN32", 0x0149);
	AddEnumsMember(idx, "CB_INSERTSTRING32", 0x014a);
	AddEnumsMember(idx, "CB_RESETCONTENT32", 0x014b);
	AddEnumsMember(idx, "CB_FINDSTRING32", 0x014c);
	AddEnumsMember(idx, "CB_SELECTSTRING32", 0x014d);
	AddEnumsMember(idx, "CB_SETCURSEL32", 0x014e);
	AddEnumsMember(idx, "CB_SHOWDROPDOWN32", 0x014f);
	AddEnumsMember(idx, "CB_GETITEMDATA32", 0x0150);
	AddEnumsMember(idx, "CB_SETITEMDATA32", 0x0151);
	AddEnumsMember(idx, "CB_GETDROPPEDCONTROLRECT32", 0x0152);
	AddEnumsMember(idx, "CB_SETITEMHEIGHT32", 0x0153);
	AddEnumsMember(idx, "CB_GETITEMHEIGHT32", 0x0154);
	AddEnumsMember(idx, "CB_SETEXTENDEDUI32", 0x0155);
	AddEnumsMember(idx, "CB_GETEXTENDEDUI32", 0x0156);
	AddEnumsMember(idx, "CB_GETDROPPEDSTATE32", 0x0157);
	AddEnumsMember(idx, "CB_FINDSTRINGEXACT32", 0x0158);
	AddEnumsMember(idx, "CB_SETLOCALE32", 0x0159);
	AddEnumsMember(idx, "CB_GETLOCALE32", 0x015a);
	AddEnumsMember(idx, "CB_GETTOPINDEX32", 0x015b);
	AddEnumsMember(idx, "CB_SETTOPINDEX32", 0x015c);
	AddEnumsMember(idx, "CB_GETHORIZONTALEXTENT32", 0x015d);
	AddEnumsMember(idx, "CB_SETHORIZONTALEXTENT32", 0x015e);
	AddEnumsMember(idx, "CB_GETDROPPEDWIDTH32", 0x015f);
	AddEnumsMember(idx, "CB_SETDROPPEDWIDTH32", 0x0160);
	AddEnumsMember(idx, "CB_INITSTORAGE32", 0x0161);
	AddEnumsMember(idx, "WM_UNDEF_0x0162", 0x0162);
	AddEnumsMember(idx, "CB_MULTIPLEADDSTRING", 0x0163);
	AddEnumsMember(idx, "CB_GETCOMBOBOXINFO", 0x0164);
	AddEnumsMember(idx, "WM_UNDEF_0x0165", 0x0165);
	AddEnumsMember(idx, "WM_UNDEF_0x0166", 0x0166);
	AddEnumsMember(idx, "WM_UNDEF_0x0167", 0x0167);
	AddEnumsMember(idx, "WM_UNDEF_0x0168", 0x0168);
	AddEnumsMember(idx, "WM_UNDEF_0x0169", 0x0169);
	AddEnumsMember(idx, "WM_UNDEF_0x016a", 0x016a);
	AddEnumsMember(idx, "WM_UNDEF_0x016b", 0x016b);
	AddEnumsMember(idx, "WM_UNDEF_0x016c", 0x016c);
	AddEnumsMember(idx, "WM_UNDEF_0x016d", 0x016d);
	AddEnumsMember(idx, "WM_UNDEF_0x016e", 0x016e);
	AddEnumsMember(idx, "WM_UNDEF_0x016f", 0x016f);
	AddEnumsMember(idx, "STM_SETICON32", 0x0170);
	AddEnumsMember(idx, "STM_GETICON32", 0x0171);
	AddEnumsMember(idx, "STM_SETIMAGE32", 0x0172);
	AddEnumsMember(idx, "STM_GETIMAGE32", 0x0173);
	AddEnumsMember(idx, "STM_MSGMAX", 0x0174);
	AddEnumsMember(idx, "WM_UNDEF_0x0175", 0x0175);
	AddEnumsMember(idx, "WM_UNDEF_0x0176", 0x0176);
	AddEnumsMember(idx, "WM_UNDEF_0x0177", 0x0177);
	AddEnumsMember(idx, "WM_UNDEF_0x0178", 0x0178);
	AddEnumsMember(idx, "WM_UNDEF_0x0179", 0x0179);
	AddEnumsMember(idx, "WM_UNDEF_0x017a", 0x017a);
	AddEnumsMember(idx, "WM_UNDEF_0x017b", 0x017b);
	AddEnumsMember(idx, "WM_UNDEF_0x017c", 0x017c);
	AddEnumsMember(idx, "WM_UNDEF_0x017d", 0x017d);
	AddEnumsMember(idx, "WM_UNDEF_0x017e", 0x017e);
	AddEnumsMember(idx, "WM_UNDEF_0x017f", 0x017f);
	AddEnumsMember(idx, "LB_ADDSTRING32", 0x0180);
	AddEnumsMember(idx, "LB_INSERTSTRING32", 0x0181);
	AddEnumsMember(idx, "LB_DELETESTRING32", 0x0182);
	AddEnumsMember(idx, "LB_SELITEMRANGEEX32", 0x0183);
	AddEnumsMember(idx, "LB_RESETCONTENT32", 0x0184);
	AddEnumsMember(idx, "LB_SETSEL32", 0x0185);
	AddEnumsMember(idx, "LB_SETCURSEL32", 0x0186);
	AddEnumsMember(idx, "LB_GETSEL32", 0x0187);
	AddEnumsMember(idx, "LB_GETCURSEL32", 0x0188);
	AddEnumsMember(idx, "LB_GETTEXT32", 0x0189);
	AddEnumsMember(idx, "LB_GETTEXTLEN32", 0x018a);
	AddEnumsMember(idx, "LB_GETCOUNT32", 0x018b);
	AddEnumsMember(idx, "LB_SELECTSTRING32", 0x018c);
	AddEnumsMember(idx, "LB_DIR32", 0x018d);
	AddEnumsMember(idx, "LB_GETTOPINDEX32", 0x018e);
	AddEnumsMember(idx, "LB_FINDSTRING32", 0x018f);
	AddEnumsMember(idx, "LB_GETSELCOUNT32", 0x0190);
	AddEnumsMember(idx, "LB_GETSELITEMS32", 0x0191);
	AddEnumsMember(idx, "LB_SETTABSTOPS32", 0x0192);
	AddEnumsMember(idx, "LB_GETHORIZONTALEXTENT32", 0x0193);
	AddEnumsMember(idx, "LB_SETHORIZONTALEXTENT32", 0x0194);
	AddEnumsMember(idx, "LB_SETCOLUMNWIDTH32", 0x0195);
	AddEnumsMember(idx, "LB_ADDFILE32", 0x0196);
	AddEnumsMember(idx, "LB_SETTOPINDEX32", 0x0197);
	AddEnumsMember(idx, "LB_GETITEMRECT32", 0x0198);
	AddEnumsMember(idx, "LB_GETITEMDATA32", 0x0199);
	AddEnumsMember(idx, "LB_SETITEMDATA32", 0x019a);
	AddEnumsMember(idx, "LB_SELITEMRANGE32", 0x019b);
	AddEnumsMember(idx, "LB_SETANCHORINDEX32", 0x019c);
	AddEnumsMember(idx, "LB_GETANCHORINDEX32", 0x019d);
	AddEnumsMember(idx, "LB_SETCARETINDEX32", 0x019e);
	AddEnumsMember(idx, "LB_GETCARETINDEX32", 0x019f);
	AddEnumsMember(idx, "LB_SETITEMHEIGHT32", 0x01a0);
	AddEnumsMember(idx, "LB_GETITEMHEIGHT32", 0x01a1);
	AddEnumsMember(idx, "LB_FINDSTRINGEXACT32", 0x01a2);
	AddEnumsMember(idx, "LB_CARETON32", 0x01a3);
	AddEnumsMember(idx, "LB_CARETOFF32", 0x01a4);
	AddEnumsMember(idx, "LB_SETLOCALE32", 0x01a5);
	AddEnumsMember(idx, "LB_GETLOCALE32", 0x01a6);
	AddEnumsMember(idx, "LB_SETCOUNT32", 0x01a7);
	AddEnumsMember(idx, "LB_INITSTORAGE32", 0x01a8);
	AddEnumsMember(idx, "LB_ITEMFROMPOINT32", 0x01a9);
	AddEnumsMember(idx, "LB_INSERTSTRINGUPPER", 0x01aa);
	AddEnumsMember(idx, "LB_INSERTSTRINGLOWER", 0x01ab);
	AddEnumsMember(idx, "LB_ADDSTRINGUPPER", 0x01ac);
	AddEnumsMember(idx, "LB_ADDSTRINGLOWER", 0x01ad);
	AddEnumsMember(idx, "LBCB_STARTTRACK", 0x01ae);
	AddEnumsMember(idx, "LBCB_ENDTRACK", 0x01af);
	AddEnumsMember(idx, "WM_UNDEF_0x01B0", 0x01B0);
	AddEnumsMember(idx, "LB_MULTIPLEADDSTRING", 0x01b1);
	AddEnumsMember(idx, "LB_GETLISTBOXINFO", 0x01b2);
	AddEnumsMember(idx, "WM_UNDEF_0x01b3", 0x01b3);
	AddEnumsMember(idx, "WM_UNDEF_0x01b4", 0x01b4);
	AddEnumsMember(idx, "WM_UNDEF_0x01b5", 0x01b5);
	AddEnumsMember(idx, "WM_UNDEF_0x01b6", 0x01b6);
	AddEnumsMember(idx, "WM_UNDEF_0x01b7", 0x01b7);
	AddEnumsMember(idx, "WM_UNDEF_0x01b8", 0x01b8);
	AddEnumsMember(idx, "WM_UNDEF_0x01b9", 0x01b9);
	AddEnumsMember(idx, "WM_UNDEF_0x01ba", 0x01ba);
	AddEnumsMember(idx, "WM_UNDEF_0x01bb", 0x01bb);
	AddEnumsMember(idx, "WM_UNDEF_0x01bc", 0x01bc);
	AddEnumsMember(idx, "WM_UNDEF_0x01bd", 0x01bd);
	AddEnumsMember(idx, "WM_UNDEF_0x01be", 0x01be);
	AddEnumsMember(idx, "WM_UNDEF_0x01bf", 0x01bf);
	AddEnumsMember(idx, "WM_UNDEF_0x01C0", 0x01C0);
	AddEnumsMember(idx, "WM_UNDEF_0x01c1", 0x01c1);
	AddEnumsMember(idx, "WM_UNDEF_0x01c2", 0x01c2);
	AddEnumsMember(idx, "WM_UNDEF_0x01c3", 0x01c3);
	AddEnumsMember(idx, "WM_UNDEF_0x01c4", 0x01c4);
	AddEnumsMember(idx, "WM_UNDEF_0x01c5", 0x01c5);
	AddEnumsMember(idx, "WM_UNDEF_0x01c6", 0x01c6);
	AddEnumsMember(idx, "WM_UNDEF_0x01c7", 0x01c7);
	AddEnumsMember(idx, "WM_UNDEF_0x01c8", 0x01c8);
	AddEnumsMember(idx, "WM_UNDEF_0x01c9", 0x01c9);
	AddEnumsMember(idx, "WM_UNDEF_0x01ca", 0x01ca);
	AddEnumsMember(idx, "WM_UNDEF_0x01cb", 0x01cb);
	AddEnumsMember(idx, "WM_UNDEF_0x01cc", 0x01cc);
	AddEnumsMember(idx, "WM_UNDEF_0x01cd", 0x01cd);
	AddEnumsMember(idx, "WM_UNDEF_0x01ce", 0x01ce);
	AddEnumsMember(idx, "WM_UNDEF_0x01cf", 0x01cf);
	AddEnumsMember(idx, "WM_UNDEF_0x01D0", 0x01D0);
	AddEnumsMember(idx, "WM_UNDEF_0x01d1", 0x01d1);
	AddEnumsMember(idx, "WM_UNDEF_0x01d2", 0x01d2);
	AddEnumsMember(idx, "WM_UNDEF_0x01d3", 0x01d3);
	AddEnumsMember(idx, "WM_UNDEF_0x01d4", 0x01d4);
	AddEnumsMember(idx, "WM_UNDEF_0x01d5", 0x01d5);
	AddEnumsMember(idx, "WM_UNDEF_0x01d6", 0x01d6);
	AddEnumsMember(idx, "WM_UNDEF_0x01d7", 0x01d7);
	AddEnumsMember(idx, "WM_UNDEF_0x01d8", 0x01d8);
	AddEnumsMember(idx, "WM_UNDEF_0x01d9", 0x01d9);
	AddEnumsMember(idx, "WM_UNDEF_0x01da", 0x01da);
	AddEnumsMember(idx, "WM_UNDEF_0x01db", 0x01db);
	AddEnumsMember(idx, "WM_UNDEF_0x01dc", 0x01dc);
	AddEnumsMember(idx, "WM_UNDEF_0x01dd", 0x01dd);
	AddEnumsMember(idx, "WM_UNDEF_0x01de", 0x01de);
	AddEnumsMember(idx, "WM_UNDEF_0x01df", 0x01df);
	AddEnumsMember(idx, "WM_UNDEF_0x01E0", 0x01E0);
	AddEnumsMember(idx, "WM_UNDEF_0x01e1", 0x01e1);
	AddEnumsMember(idx, "WM_UNDEF_0x01e2", 0x01e2);
	AddEnumsMember(idx, "MN_SETHMENU", 0x01e3);
	AddEnumsMember(idx, "MN_GETHMENU", 0x01e4);
	AddEnumsMember(idx, "MN_SIZEWINDOW", 0x01e5);
	AddEnumsMember(idx, "MN_OPENHIERARCHY", 0x01e6);
	AddEnumsMember(idx, "MN_CLOSEHIERARCHY", 0x01e7);
	AddEnumsMember(idx, "MN_SELECTITEM", 0x01e8);
	AddEnumsMember(idx, "MN_CANCELMENUS", 0x01e9);
	AddEnumsMember(idx, "MN_SELECTFIRSTVALIDITEM", 0x01ea);
	AddEnumsMember(idx, "WM_UNDEF_0x01eb", 0x01eb);
	AddEnumsMember(idx, "WM_UNDEF_0x01ec", 0x01ec);
	AddEnumsMember(idx, "WM_UNDEF_0x01ed", 0x01ed);
	AddEnumsMember(idx, "MN_FINDMENUWINDOWFROMPOINT", 0x01ee);
	AddEnumsMember(idx, "MN_SHOWPOPUPWINDOW", 0x01ef);
	AddEnumsMember(idx, "MN_BUTTONUP", 0x01f0);
	AddEnumsMember(idx, "MN_SETTIMERTOOPENHIERARCHY", 0x01f1);
	AddEnumsMember(idx, "MN_DBLCLK", 0x01f2);
	AddEnumsMember(idx, "MN_ACTIVEPOPUP", 0x01f3);
	AddEnumsMember(idx, "MN_ENDMENU", 0x01f4);
	AddEnumsMember(idx, "MN_DODRAGDROP", 0x01f5);
	AddEnumsMember(idx, "WM_UNDEF_0x01f6", 0x01f6);
	AddEnumsMember(idx, "WM_UNDEF_0x01f7", 0x01f7);
	AddEnumsMember(idx, "WM_UNDEF_0x01f8", 0x01f8);
	AddEnumsMember(idx, "WM_UNDEF_0x01f9", 0x01f9);
	AddEnumsMember(idx, "WM_UNDEF_0x01fa", 0x01fa);
	AddEnumsMember(idx, "WM_UNDEF_0x01fb", 0x01fb);
	AddEnumsMember(idx, "WM_UNDEF_0x01fc", 0x01fc);
	AddEnumsMember(idx, "WM_UNDEF_0x01fd", 0x01fd);
	AddEnumsMember(idx, "WM_UNDEF_0x01fe", 0x01fe);
	AddEnumsMember(idx, "WM_UNDEF_0x01ff", 0x01ff);
	AddEnumsMember(idx, "WM_MOUSEMOVE", 0x0200);
	AddEnumsMember(idx, "WM_LBUTTONDOWN", 0x0201);
	AddEnumsMember(idx, "WM_LBUTTONUP", 0x0202);
	AddEnumsMember(idx, "WM_LBUTTONDBLCLK", 0x0203);
	AddEnumsMember(idx, "WM_RBUTTONDOWN", 0x0204);
	AddEnumsMember(idx, "WM_RBUTTONUP", 0x0205);
	AddEnumsMember(idx, "WM_RBUTTONDBLCLK", 0x0206);
	AddEnumsMember(idx, "WM_MBUTTONDOWN", 0x0207);
	AddEnumsMember(idx, "WM_MBUTTONUP", 0x0208);
	AddEnumsMember(idx, "WM_MBUTTONDBLCLK", 0x0209);
	AddEnumsMember(idx, "WM_MOUSEWHEEL", 0x020a);
	AddEnumsMember(idx, "WM_XBUTTONDOWN", 0x020b);
	AddEnumsMember(idx, "WM_XBUTTONUP", 0x020c);
	AddEnumsMember(idx, "WM_XBUTTONDBLCLK", 0x020d);
	AddEnumsMember(idx, "WM_UNDEF_0x020e", 0x020e);
	AddEnumsMember(idx, "WM_UNDEF_0x020f", 0x020f);
	AddEnumsMember(idx, "WM_PARENTNOTIFY", 0x0210);
	AddEnumsMember(idx, "WM_ENTERMENULOOP", 0x0211);
	AddEnumsMember(idx, "WM_EXITMENULOOP", 0x0212);
	AddEnumsMember(idx, "WM_NEXTMENU", 0x0213);
	AddEnumsMember(idx, "WM_SIZING", 0x0214);
	AddEnumsMember(idx, "WM_CAPTURECHANGED", 0x0215);
	AddEnumsMember(idx, "WM_MOVING", 0x0216);
	AddEnumsMember(idx, "WM_UNDEF_0x0217", 0x0217);
	AddEnumsMember(idx, "WM_POWERBROADCAST", 0x0218);
	AddEnumsMember(idx, "WM_DEVICECHANGE", 0x0219);
	AddEnumsMember(idx, "WM_UNDEF_0x021a", 0x021a);
	AddEnumsMember(idx, "WM_UNDEF_0x021b", 0x021b);
	AddEnumsMember(idx, "WM_UNDEF_0x021c", 0x021c);
	AddEnumsMember(idx, "WM_UNDEF_0x021d", 0x021d);
	AddEnumsMember(idx, "WM_UNDEF_0x021e", 0x021e);
	AddEnumsMember(idx, "WM_UNDEF_0x021f", 0x021f);
	AddEnumsMember(idx, "WM_MDICREATE", 0x0220);
	AddEnumsMember(idx, "WM_MDIDESTROY", 0x0221);
	AddEnumsMember(idx, "WM_MDIACTIVATE", 0x0222);
	AddEnumsMember(idx, "WM_MDIRESTORE", 0x0223);
	AddEnumsMember(idx, "WM_MDINEXT", 0x0224);
	AddEnumsMember(idx, "WM_MDIMAXIMIZE", 0x0225);
	AddEnumsMember(idx, "WM_MDITILE", 0x0226);
	AddEnumsMember(idx, "WM_MDICASCADE", 0x0227);
	AddEnumsMember(idx, "WM_MDIICONARRANGE", 0x0228);
	AddEnumsMember(idx, "WM_MDIGETACTIVE", 0x0229);
	AddEnumsMember(idx, "WM_DROPOBJECT", 0x022a);
	AddEnumsMember(idx, "WM_QUERYDROPOBJECT", 0x022b);
	AddEnumsMember(idx, "WM_BEGINDRAG", 0x022c);
	AddEnumsMember(idx, "WM_DRAGLOOP", 0x022d);
	AddEnumsMember(idx, "WM_DRAGSELECT", 0x022e);
	AddEnumsMember(idx, "WM_DRAGMOVE", 0x022af);
	AddEnumsMember(idx, "WM_MDISETMENU", 0x0230);
	AddEnumsMember(idx, "WM_ENTERSIZEMOVE", 0x0231);
	AddEnumsMember(idx, "WM_EXITSIZEMOVE", 0x0232);
	AddEnumsMember(idx, "WM_DROPFILES", 0x0233);
	AddEnumsMember(idx, "WM_MDIREFRESHMENU", 0x0234);
	AddEnumsMember(idx, "WM_UNDEF_0x0235", 0x0235);
	AddEnumsMember(idx, "WM_UNDEF_0x0236", 0x0236);
	AddEnumsMember(idx, "WM_UNDEF_0x0237", 0x0237);
	AddEnumsMember(idx, "WM_UNDEF_0x0238", 0x0238);
	AddEnumsMember(idx, "WM_UNDEF_0x0239", 0x0239);
	AddEnumsMember(idx, "WM_UNDEF_0x023a", 0x023a);
	AddEnumsMember(idx, "WM_UNDEF_0x023b", 0x023b);
	AddEnumsMember(idx, "WM_UNDEF_0x023c", 0x023c);
	AddEnumsMember(idx, "WM_UNDEF_0x023d", 0x023d);
	AddEnumsMember(idx, "WM_UNDEF_0x023e", 0x023e);
	AddEnumsMember(idx, "WM_UNDEF_0x023f", 0x023f);
	AddEnumsMember(idx, "WM_UNDEF_0x0240", 0x0240);
	AddEnumsMember(idx, "WM_UNDEF_0x0241", 0x0241);
	AddEnumsMember(idx, "WM_UNDEF_0x0242", 0x0242);
	AddEnumsMember(idx, "WM_UNDEF_0x0243", 0x0243);
	AddEnumsMember(idx, "WM_UNDEF_0x0244", 0x0244);
	AddEnumsMember(idx, "WM_UNDEF_0x0245", 0x0245);
	AddEnumsMember(idx, "WM_UNDEF_0x0246", 0x0246);
	AddEnumsMember(idx, "WM_UNDEF_0x0247", 0x0247);
	AddEnumsMember(idx, "WM_UNDEF_0x0248", 0x0248);
	AddEnumsMember(idx, "WM_UNDEF_0x0249", 0x0249);
	AddEnumsMember(idx, "WM_UNDEF_0x024a", 0x024a);
	AddEnumsMember(idx, "WM_UNDEF_0x024b", 0x024b);
	AddEnumsMember(idx, "WM_UNDEF_0x024c", 0x024c);
	AddEnumsMember(idx, "WM_UNDEF_0x024d", 0x024d);
	AddEnumsMember(idx, "WM_UNDEF_0x024e", 0x024e);
	AddEnumsMember(idx, "WM_UNDEF_0x024f", 0x024f);
	AddEnumsMember(idx, "WM_UNDEF_0x0250", 0x0250);
	AddEnumsMember(idx, "WM_UNDEF_0x0251", 0x0251);
	AddEnumsMember(idx, "WM_UNDEF_0x0252", 0x0252);
	AddEnumsMember(idx, "WM_UNDEF_0x0253", 0x0253);
	AddEnumsMember(idx, "WM_UNDEF_0x0254", 0x0254);
	AddEnumsMember(idx, "WM_UNDEF_0x0255", 0x0255);
	AddEnumsMember(idx, "WM_UNDEF_0x0256", 0x0256);
	AddEnumsMember(idx, "WM_UNDEF_0x0257", 0x0257);
	AddEnumsMember(idx, "WM_UNDEF_0x0258", 0x0258);
	AddEnumsMember(idx, "WM_UNDEF_0x0259", 0x0259);
	AddEnumsMember(idx, "WM_UNDEF_0x025a", 0x025a);
	AddEnumsMember(idx, "WM_UNDEF_0x025b", 0x025b);
	AddEnumsMember(idx, "WM_UNDEF_0x025c", 0x025c);
	AddEnumsMember(idx, "WM_UNDEF_0x025d", 0x025d);
	AddEnumsMember(idx, "WM_UNDEF_0x025e", 0x025e);
	AddEnumsMember(idx, "WM_UNDEF_0x025f", 0x025f);
	AddEnumsMember(idx, "WM_UNDEF_0x0260", 0x0260);
	AddEnumsMember(idx, "WM_UNDEF_0x0261", 0x0261);
	AddEnumsMember(idx, "WM_UNDEF_0x0262", 0x0262);
	AddEnumsMember(idx, "WM_UNDEF_0x0263", 0x0263);
	AddEnumsMember(idx, "WM_UNDEF_0x0264", 0x0264);
	AddEnumsMember(idx, "WM_UNDEF_0x0265", 0x0265);
	AddEnumsMember(idx, "WM_UNDEF_0x0266", 0x0266);
	AddEnumsMember(idx, "WM_UNDEF_0x0267", 0x0267);
	AddEnumsMember(idx, "WM_UNDEF_0x0268", 0x0268);
	AddEnumsMember(idx, "WM_UNDEF_0x0269", 0x0269);
	AddEnumsMember(idx, "WM_UNDEF_0x026a", 0x026a);
	AddEnumsMember(idx, "WM_UNDEF_0x026b", 0x026b);
	AddEnumsMember(idx, "WM_UNDEF_0x026c", 0x026c);
	AddEnumsMember(idx, "WM_UNDEF_0x026d", 0x026d);
	AddEnumsMember(idx, "WM_UNDEF_0x026e", 0x026e);
	AddEnumsMember(idx, "WM_UNDEF_0x026f", 0x026f);
	AddEnumsMember(idx, "WM_UNDEF_0x0270", 0x0270);
	AddEnumsMember(idx, "WM_UNDEF_0x0271", 0x0271);
	AddEnumsMember(idx, "WM_UNDEF_0x0272", 0x0272);
	AddEnumsMember(idx, "WM_UNDEF_0x0273", 0x0273);
	AddEnumsMember(idx, "WM_UNDEF_0x0274", 0x0274);
	AddEnumsMember(idx, "WM_UNDEF_0x0275", 0x0275);
	AddEnumsMember(idx, "WM_UNDEF_0x0276", 0x0276);
	AddEnumsMember(idx, "WM_UNDEF_0x0277", 0x0277);
	AddEnumsMember(idx, "WM_UNDEF_0x0278", 0x0278);
	AddEnumsMember(idx, "WM_UNDEF_0x0279", 0x0279);
	AddEnumsMember(idx, "WM_UNDEF_0x027a", 0x027a);
	AddEnumsMember(idx, "WM_UNDEF_0x027b", 0x027b);
	AddEnumsMember(idx, "WM_UNDEF_0x027c", 0x027c);
	AddEnumsMember(idx, "WM_UNDEF_0x027d", 0x027d);
	AddEnumsMember(idx, "WM_UNDEF_0x027e", 0x027e);
	AddEnumsMember(idx, "WM_UNDEF_0x027f", 0x027f);
	AddEnumsMember(idx, "WM_KANJIFIRST", 0x0280);
	AddEnumsMember(idx, "WM_IME_SETCONTENT", 0x0281);
	AddEnumsMember(idx, "WM_IME_NOTIFY", 0x0282);
	AddEnumsMember(idx, "WM_IME_CONTROL", 0x0283);
	AddEnumsMember(idx, "WM_IME_COMPOSITIONFULL", 0x0284);
	AddEnumsMember(idx, "WM_IME_SELECT", 0x0285);
	AddEnumsMember(idx, "WM_IME_CHAR", 0x0286);
	AddEnumsMember(idx, "WM_IME_SYSTEM", 0x0287);
	AddEnumsMember(idx, "WM_IME_REQUEST", 0x0288);
	AddEnumsMember(idx, "WM_UNDEF_0x0289", 0x0289);
	AddEnumsMember(idx, "WM_UNDEF_0x028a", 0x028a);
	AddEnumsMember(idx, "WM_UNDEF_0x028b", 0x028b);
	AddEnumsMember(idx, "WM_UNDEF_0x028c", 0x028c);
	AddEnumsMember(idx, "WM_UNDEF_0x028d", 0x028d);
	AddEnumsMember(idx, "WM_UNDEF_0x028e", 0x028e);
	AddEnumsMember(idx, "WM_UNDEF_0x028f", 0x028f);
	AddEnumsMember(idx, "WM_IME_KEYDOWN", 0x0290);
	AddEnumsMember(idx, "WM_IME_KEYUP", 0x0291);
	AddEnumsMember(idx, "WM_UNDEF_0x0292", 0x0292);
	AddEnumsMember(idx, "WM_UNDEF_0x0293", 0x0293);
	AddEnumsMember(idx, "WM_UNDEF_0x0294", 0x0294);
	AddEnumsMember(idx, "WM_UNDEF_0x0295", 0x0295);
	AddEnumsMember(idx, "WM_UNDEF_0x0296", 0x0296);
	AddEnumsMember(idx, "WM_UNDEF_0x0297", 0x0297);
	AddEnumsMember(idx, "WM_UNDEF_0x0298", 0x0298);
	AddEnumsMember(idx, "WM_UNDEF_0x0299", 0x0299);
	AddEnumsMember(idx, "WM_UNDEF_0x029a", 0x029a);
	AddEnumsMember(idx, "WM_UNDEF_0x029b", 0x029b);
	AddEnumsMember(idx, "WM_UNDEF_0x029c", 0x029c);
	AddEnumsMember(idx, "WM_UNDEF_0x029d", 0x029d);
	AddEnumsMember(idx, "WM_UNDEF_0x029e", 0x029e);
	AddEnumsMember(idx, "WM_KANJILAST", 0x029f);
	AddEnumsMember(idx, "WM_NCMOUSEHOVER", 0x02a0);
	AddEnumsMember(idx, "WM_MOUSEHOVER", 0x02a1);
	AddEnumsMember(idx, "WM_NCMOUSELEAVE", 0x02a2);
	AddEnumsMember(idx, "WM_MOUSELEAVE", 0x02a3);
	AddEnumsMember(idx, "WM_UNDEF_0x02a4", 0x02a4);
	AddEnumsMember(idx, "WM_UNDEF_0x02a5", 0x02a5);
	AddEnumsMember(idx, "WM_UNDEF_0x02a6", 0x02a6);
	AddEnumsMember(idx, "WM_UNDEF_0x02a7", 0x02a7);
	AddEnumsMember(idx, "WM_UNDEF_0x02a8", 0x02a8);
	AddEnumsMember(idx, "WM_UNDEF_0x02a9", 0x02a9);
	AddEnumsMember(idx, "WM_UNDEF_0x02aa", 0x02aa);
	AddEnumsMember(idx, "WM_UNDEF_0x02ab", 0x02ab);
	AddEnumsMember(idx, "WM_UNDEF_0x02ac", 0x02ac);
	AddEnumsMember(idx, "WM_UNDEF_0x02ad", 0x02ad);
	AddEnumsMember(idx, "WM_UNDEF_0x02ae", 0x02ae);
	AddEnumsMember(idx, "WM_UNDEF_0x02af", 0x02af);
	AddEnumsMember(idx, "WM_UNDEF_0x02b0", 0x02b0);
	AddEnumsMember(idx, "WM_UNDEF_0x02b1", 0x02b1);
	AddEnumsMember(idx, "WM_UNDEF_0x02b2", 0x02b2);
	AddEnumsMember(idx, "WM_UNDEF_0x02b3", 0x02b3);
	AddEnumsMember(idx, "WM_UNDEF_0x02b4", 0x02b4);
	AddEnumsMember(idx, "WM_UNDEF_0x02b5", 0x02b5);
	AddEnumsMember(idx, "WM_UNDEF_0x02b6", 0x02b6);
	AddEnumsMember(idx, "WM_UNDEF_0x02b7", 0x02b7);
	AddEnumsMember(idx, "WM_UNDEF_0x02b8", 0x02b8);
	AddEnumsMember(idx, "WM_UNDEF_0x02b9", 0x02b9);
	AddEnumsMember(idx, "WM_UNDEF_0x02ba", 0x02ba);
	AddEnumsMember(idx, "WM_UNDEF_0x02bb", 0x02bb);
	AddEnumsMember(idx, "WM_UNDEF_0x02bc", 0x02bc);
	AddEnumsMember(idx, "WM_UNDEF_0x02bd", 0x02bd);
	AddEnumsMember(idx, "WM_UNDEF_0x02be", 0x02be);
	AddEnumsMember(idx, "WM_UNDEF_0x02bf", 0x02bf);
	AddEnumsMember(idx, "WM_UNDEF_0x02c0", 0x02c0);
	AddEnumsMember(idx, "WM_UNDEF_0x02c1", 0x02c1);
	AddEnumsMember(idx, "WM_UNDEF_0x02c2", 0x02c2);
	AddEnumsMember(idx, "WM_UNDEF_0x02c3", 0x02c3);
	AddEnumsMember(idx, "WM_UNDEF_0x02c4", 0x02c4);
	AddEnumsMember(idx, "WM_UNDEF_0x02c5", 0x02c5);
	AddEnumsMember(idx, "WM_UNDEF_0x02c6", 0x02c6);
	AddEnumsMember(idx, "WM_UNDEF_0x02c7", 0x02c7);
	AddEnumsMember(idx, "WM_UNDEF_0x02c8", 0x02c8);
	AddEnumsMember(idx, "WM_UNDEF_0x02c9", 0x02c9);
	AddEnumsMember(idx, "WM_UNDEF_0x02ca", 0x02ca);
	AddEnumsMember(idx, "WM_UNDEF_0x02cb", 0x02cb);
	AddEnumsMember(idx, "WM_UNDEF_0x02cc", 0x02cc);
	AddEnumsMember(idx, "WM_UNDEF_0x02cd", 0x02cd);
	AddEnumsMember(idx, "WM_UNDEF_0x02ce", 0x02ce);
	AddEnumsMember(idx, "WM_UNDEF_0x02cf", 0x02cf);
	AddEnumsMember(idx, "WM_UNDEF_0x02d0", 0x02d0);
	AddEnumsMember(idx, "WM_UNDEF_0x02d1", 0x02d1);
	AddEnumsMember(idx, "WM_UNDEF_0x02d2", 0x02d2);
	AddEnumsMember(idx, "WM_UNDEF_0x02d3", 0x02d3);
	AddEnumsMember(idx, "WM_UNDEF_0x02d4", 0x02d4);
	AddEnumsMember(idx, "WM_UNDEF_0x02d5", 0x02d5);
	AddEnumsMember(idx, "WM_UNDEF_0x02d6", 0x02d6);
	AddEnumsMember(idx, "WM_UNDEF_0x02d7", 0x02d7);
	AddEnumsMember(idx, "WM_UNDEF_0x02d8", 0x02d8);
	AddEnumsMember(idx, "WM_UNDEF_0x02d9", 0x02d9);
	AddEnumsMember(idx, "WM_UNDEF_0x02da", 0x02da);
	AddEnumsMember(idx, "WM_UNDEF_0x02db", 0x02db);
	AddEnumsMember(idx, "WM_UNDEF_0x02dc", 0x02dc);
	AddEnumsMember(idx, "WM_UNDEF_0x02dd", 0x02dd);
	AddEnumsMember(idx, "WM_UNDEF_0x02de", 0x02de);
	AddEnumsMember(idx, "WM_UNDEF_0x02df", 0x02df);
	AddEnumsMember(idx, "WM_UNDEF_0x02e0", 0x02e0);
	AddEnumsMember(idx, "WM_UNDEF_0x02e1", 0x02e1);
	AddEnumsMember(idx, "WM_UNDEF_0x02e2", 0x02e2);
	AddEnumsMember(idx, "WM_UNDEF_0x02e3", 0x02e3);
	AddEnumsMember(idx, "WM_UNDEF_0x02e4", 0x02e4);
	AddEnumsMember(idx, "WM_UNDEF_0x02e5", 0x02e5);
	AddEnumsMember(idx, "WM_UNDEF_0x02e6", 0x02e6);
	AddEnumsMember(idx, "WM_UNDEF_0x02e7", 0x02e7);
	AddEnumsMember(idx, "WM_UNDEF_0x02e8", 0x02e8);
	AddEnumsMember(idx, "WM_UNDEF_0x02e9", 0x02e9);
	AddEnumsMember(idx, "WM_UNDEF_0x02ea", 0x02ea);
	AddEnumsMember(idx, "WM_UNDEF_0x02eb", 0x02eb);
	AddEnumsMember(idx, "WM_UNDEF_0x02ec", 0x02ec);
	AddEnumsMember(idx, "WM_UNDEF_0x02ed", 0x02ed);
	AddEnumsMember(idx, "WM_UNDEF_0x02ee", 0x02ee);
	AddEnumsMember(idx, "WM_UNDEF_0x02ef", 0x02ef);
	AddEnumsMember(idx, "WM_UNDEF_0x02f0", 0x02f0);
	AddEnumsMember(idx, "WM_UNDEF_0x02f1", 0x02f1);
	AddEnumsMember(idx, "WM_UNDEF_0x02f2", 0x02f2);
	AddEnumsMember(idx, "WM_UNDEF_0x02f3", 0x02f3);
	AddEnumsMember(idx, "WM_UNDEF_0x02f4", 0x02f4);
	AddEnumsMember(idx, "WM_UNDEF_0x02f5", 0x02f5);
	AddEnumsMember(idx, "WM_UNDEF_0x02f6", 0x02f6);
	AddEnumsMember(idx, "WM_UNDEF_0x02f7", 0x02f7);
	AddEnumsMember(idx, "WM_UNDEF_0x02f8", 0x02f8);
	AddEnumsMember(idx, "WM_UNDEF_0x02f9", 0x02f9);
	AddEnumsMember(idx, "WM_UNDEF_0x02fa", 0x02fa);
	AddEnumsMember(idx, "WM_UNDEF_0x02fb", 0x02fb);
	AddEnumsMember(idx, "WM_UNDEF_0x02fc", 0x02fc);
	AddEnumsMember(idx, "WM_UNDEF_0x02fd", 0x02fd);
	AddEnumsMember(idx, "WM_UNDEF_0x02fe", 0x02fe);
	AddEnumsMember(idx, "WM_UNDEF_0x02ff", 0x02ff);
	AddEnumsMember(idx, "WM_CUT", 0x0300);
	AddEnumsMember(idx, "WM_COPY", 0x0301);
	AddEnumsMember(idx, "WM_PASTE", 0x0302);
	AddEnumsMember(idx, "WM_CLEAR", 0x0303);
	AddEnumsMember(idx, "WM_UNDO", 0x0304);
	AddEnumsMember(idx, "WM_RENDERFORMAT", 0x0305);
	AddEnumsMember(idx, "WM_RENDERALLFORMATS", 0x0306);
	AddEnumsMember(idx, "WM_DESTROYCLIPBOARD", 0x0307);
	AddEnumsMember(idx, "WM_DRAWCLIPBOARD", 0x0308);
	AddEnumsMember(idx, "WM_PAINTCLIPBOARD", 0x0309);
	AddEnumsMember(idx, "WM_VSCROLLCLIPBOARD", 0x030a);
	AddEnumsMember(idx, "WM_SIZECLIPBOARD", 0x030b);
	AddEnumsMember(idx, "WM_ASKCBFORMATNAME", 0x030c);
	AddEnumsMember(idx, "WM_CHANGECBCHAIN", 0x030d);
	AddEnumsMember(idx, "WM_HSCROLLCLIPBOARD", 0x030e);
	AddEnumsMember(idx, "WM_QUERYNEWPALETTE", 0x030f);
	AddEnumsMember(idx, "WM_PALETTEISCHANGING", 0x0310);
	AddEnumsMember(idx, "WM_PALETTECHANGED", 0x0311);
	AddEnumsMember(idx, "WM_HOTKEY", 0x0312);
	AddEnumsMember(idx, "WM_HOOKMSG", 0x0313);
	AddEnumsMember(idx, "WM_SYSMENU", 0x0314);
	AddEnumsMember(idx, "WM_EXITPROCESS", 0x0315);
	AddEnumsMember(idx, "WM_WAKETHREAD", 0x0316);
	AddEnumsMember(idx, "WM_PRINT", 0x0317);
	AddEnumsMember(idx, "WM_PRINTCLIENT", 0x0318);
	AddEnumsMember(idx, "WM_APPCOMMAND", 0x0319);
	AddEnumsMember(idx, "WM_THEMECHANGED", 0x031a);
	AddEnumsMember(idx, "WM_UAHINIT", 0x031b);
	AddEnumsMember(idx, "WM_UNDEF_0x031c", 0x031c);
	AddEnumsMember(idx, "WM_UNDEF_0x031d", 0x031d);
	AddEnumsMember(idx, "WM_UNDEF_0x031e", 0x031e);
	AddEnumsMember(idx, "WM_UNDEF_0x031f", 0x031f);
	AddEnumsMember(idx, "WM_UNDEF_0x0320", 0x0320);
	AddEnumsMember(idx, "WM_UNDEF_0x0321", 0x0321);
	AddEnumsMember(idx, "WM_UNDEF_0x0322", 0x0322);
	AddEnumsMember(idx, "WM_UNDEF_0x0323", 0x0323);
	AddEnumsMember(idx, "WM_UNDEF_0x0324", 0x0324);
	AddEnumsMember(idx, "WM_UNDEF_0x0325", 0x0325);
	AddEnumsMember(idx, "WM_UNDEF_0x0326", 0x0326);
	AddEnumsMember(idx, "WM_UNDEF_0x0327", 0x0327);
	AddEnumsMember(idx, "WM_UNDEF_0x0328", 0x0328);
	AddEnumsMember(idx, "WM_UNDEF_0x0329", 0x0329);
	AddEnumsMember(idx, "WM_UNDEF_0x032a", 0x032a);
	AddEnumsMember(idx, "WM_UNDEF_0x032b", 0x032b);
	AddEnumsMember(idx, "WM_UNDEF_0x032c", 0x032c);
	AddEnumsMember(idx, "WM_UNDEF_0x032d", 0x032d);
	AddEnumsMember(idx, "WM_UNDEF_0x032e", 0x032e);
	AddEnumsMember(idx, "WM_UNDEF_0x032f", 0x032f);
	AddEnumsMember(idx, "WM_UNDEF_0x0330", 0x0330);
	AddEnumsMember(idx, "WM_UNDEF_0x0331", 0x0331);
	AddEnumsMember(idx, "WM_UNDEF_0x0332", 0x0332);
	AddEnumsMember(idx, "WM_UNDEF_0x0333", 0x0333);
	AddEnumsMember(idx, "WM_UNDEF_0x0334", 0x0334);
	AddEnumsMember(idx, "WM_UNDEF_0x0335", 0x0335);
	AddEnumsMember(idx, "WM_UNDEF_0x0336", 0x0336);
	AddEnumsMember(idx, "WM_UNDEF_0x0337", 0x0337);
	AddEnumsMember(idx, "WM_UNDEF_0x0338", 0x0338);
	AddEnumsMember(idx, "WM_UNDEF_0x0339", 0x0339);
	AddEnumsMember(idx, "WM_UNDEF_0x033a", 0x033a);
	AddEnumsMember(idx, "WM_UNDEF_0x033b", 0x033b);
	AddEnumsMember(idx, "WM_UNDEF_0x033c", 0x033c);
	AddEnumsMember(idx, "WM_UNDEF_0x033d", 0x033d);
	AddEnumsMember(idx, "WM_UNDEF_0x033e", 0x033e);
	AddEnumsMember(idx, "WM_UNDEF_0x033f", 0x033f);
	AddEnumsMember(idx, "WM_NOTIFYWOW", 0x0340);
	AddEnumsMember(idx, "WM_UNDEF_0x0341", 0x0341);
	AddEnumsMember(idx, "WM_UNDEF_0x0342", 0x0342);
	AddEnumsMember(idx, "WM_UNDEF_0x0343", 0x0343);
	AddEnumsMember(idx, "WM_UNDEF_0x0344", 0x0344);
	AddEnumsMember(idx, "WM_UNDEF_0x0345", 0x0345);
	AddEnumsMember(idx, "WM_UNDEF_0x0346", 0x0346);
	AddEnumsMember(idx, "WM_UNDEF_0x0347", 0x0347);
	AddEnumsMember(idx, "WM_UNDEF_0x0348", 0x0348);
	AddEnumsMember(idx, "WM_UNDEF_0x0349", 0x0349);
	AddEnumsMember(idx, "WM_UNDEF_0x034a", 0x034a);
	AddEnumsMember(idx, "WM_UNDEF_0x034b", 0x034b);
	AddEnumsMember(idx, "WM_UNDEF_0x034c", 0x034c);
	AddEnumsMember(idx, "WM_UNDEF_0x034d", 0x034d);
	AddEnumsMember(idx, "WM_UNDEF_0x034e", 0x034e);
	AddEnumsMember(idx, "WM_UNDEF_0x034f", 0x034f);
	AddEnumsMember(idx, "WM_UNDEF_0x0350", 0x0350);
	AddEnumsMember(idx, "WM_UNDEF_0x0351", 0x0351);
	AddEnumsMember(idx, "WM_UNDEF_0x0352", 0x0352);
	AddEnumsMember(idx, "WM_UNDEF_0x0353", 0x0353);
	AddEnumsMember(idx, "WM_UNDEF_0x0354", 0x0354);
	AddEnumsMember(idx, "WM_UNDEF_0x0355", 0x0355);
	AddEnumsMember(idx, "WM_UNDEF_0x0356", 0x0356);
	AddEnumsMember(idx, "WM_UNDEF_0x0357", 0x0357);
	AddEnumsMember(idx, "WM_UNDEF_0x0358", 0x0358);
	AddEnumsMember(idx, "WM_UNDEF_0x0359", 0x0359);
	AddEnumsMember(idx, "WM_UNDEF_0x035a", 0x035a);
	AddEnumsMember(idx, "WM_UNDEF_0x035b", 0x035b);
	AddEnumsMember(idx, "WM_UNDEF_0x035c", 0x035c);
	AddEnumsMember(idx, "WM_UNDEF_0x035d", 0x035d);
	AddEnumsMember(idx, "WM_UNDEF_0x035e", 0x035e);
	AddEnumsMember(idx, "WM_UNDEF_0x035f", 0x035f);
	AddEnumsMember(idx, "WM_QUERYAFXWNDPROC", 0x0360);
	AddEnumsMember(idx, "WM_SIZEPARENT", 0x0361);
	AddEnumsMember(idx, "WM_SETMESSAGESTRING", 0x0362);
	AddEnumsMember(idx, "WM_IDLEUPDATECMDUI", 0x0363);
	AddEnumsMember(idx, "WM_INITIALUPDATE", 0x0364);
	AddEnumsMember(idx, "WM_COMMANDHELP", 0x0365);
	AddEnumsMember(idx, "WM_HELPHITTEST", 0x0366);
	AddEnumsMember(idx, "WM_EXITHELPMODE", 0x0367);
	AddEnumsMember(idx, "WM_RECALCPARENT", 0x0368);
	AddEnumsMember(idx, "WM_SIZECHILD", 0x0369);
	AddEnumsMember(idx, "WM_KICKIDLE", 0x036A);
	AddEnumsMember(idx, "WM_QUERYCENTERWND", 0x036B);
	AddEnumsMember(idx, "WM_DISABLEMODAL", 0x036C);
	AddEnumsMember(idx, "WM_FLOATSTATUS", 0x036D);
	AddEnumsMember(idx, "WM_ACTIVATETOPLEVEL", 0x036E);
	AddEnumsMember(idx, "WM_QUERY3DCONTROLS", 0x036F);
	AddEnumsMember(idx, "WM_UNDEF_0x0370", 0x0370);
	AddEnumsMember(idx, "WM_UNDEF_0x0371", 0x0371);
	AddEnumsMember(idx, "WM_UNDEF_0x0372", 0x0372);
	AddEnumsMember(idx, "WM_SOCKET_NOTIFY", 0x0373);
	AddEnumsMember(idx, "WM_SOCKET_DEAD", 0x0374);
	AddEnumsMember(idx, "WM_POPMESSAGESTRING", 0x0375);
	AddEnumsMember(idx, "WM_OCC_LOADFROMSTREAM", 0x0376);
	AddEnumsMember(idx, "WM_OCC_LOADFROMSTORAGE", 0x0377);
	AddEnumsMember(idx, "WM_OCC_INITNEW", 0x0378);
	AddEnumsMember(idx, "WM_QUEUE_SENTINEL", 0x0379);
	AddEnumsMember(idx, "WM_OCC_LOADFROMSTREAM_EX", 0x037A);
	AddEnumsMember(idx, "WM_OCC_LOADFROMSTORAGE_EX", 0x037B);
	AddEnumsMember(idx, "WM_UNDEF_0x037c", 0x037c);
	AddEnumsMember(idx, "WM_UNDEF_0x037d", 0x037d);
	AddEnumsMember(idx, "WM_UNDEF_0x037e", 0x037e);
	AddEnumsMember(idx, "WM_UNDEF_0x037f", 0x037f);
	AddEnumsMember(idx, "WM_PENWINFIRST", 0x0380);
	AddEnumsMember(idx, "WM_RCRESULT", 0x0381);
	AddEnumsMember(idx, "WM_HOOKRCRESULT", 0x0382);
	AddEnumsMember(idx, "WM_GLOBALRCCHANGE", 0x0383);
	AddEnumsMember(idx, "WM_SKB", 0x0384);
	AddEnumsMember(idx, "WM_HEDITCTL", 0x0385);
	AddEnumsMember(idx, "WM_UNDEF_0x0386", 0x0386);
	AddEnumsMember(idx, "WM_UNDEF_0x0387", 0x0387);
	AddEnumsMember(idx, "WM_UNDEF_0x0388", 0x0388);
	AddEnumsMember(idx, "WM_UNDEF_0x0389", 0x0389);
	AddEnumsMember(idx, "WM_UNDEF_0x038a", 0x038a);
	AddEnumsMember(idx, "WM_UNDEF_0x038b", 0x038b);
	AddEnumsMember(idx, "WM_UNDEF_0x038c", 0x038c);
	AddEnumsMember(idx, "WM_UNDEF_0x038d", 0x038d);
	AddEnumsMember(idx, "WM_UNDEF_0x038e", 0x038e);
	AddEnumsMember(idx, "WM_PENWINLAST", 0x038f);
	AddEnumsMember(idx, "WM_COALESCE_FIRST", 0x0390);
	AddEnumsMember(idx, "WM_UNDEF_0x0391", 0x0391);
	AddEnumsMember(idx, "WM_UNDEF_0x0392", 0x0392);
	AddEnumsMember(idx, "WM_UNDEF_0x0393", 0x0393);
	AddEnumsMember(idx, "WM_UNDEF_0x0394", 0x0394);
	AddEnumsMember(idx, "WM_UNDEF_0x0395", 0x0395);
	AddEnumsMember(idx, "WM_UNDEF_0x0396", 0x0396);
	AddEnumsMember(idx, "WM_UNDEF_0x0397", 0x0397);
	AddEnumsMember(idx, "WM_UNDEF_0x0398", 0x0398);
	AddEnumsMember(idx, "WM_UNDEF_0x0399", 0x0399);
	AddEnumsMember(idx, "WM_UNDEF_0x039a", 0x039a);
	AddEnumsMember(idx, "WM_UNDEF_0x039b", 0x039b);
	AddEnumsMember(idx, "WM_UNDEF_0x039c", 0x039c);
	AddEnumsMember(idx, "WM_UNDEF_0x039d", 0x039d);
	AddEnumsMember(idx, "WM_UNDEF_0x039e", 0x039e);
	AddEnumsMember(idx, "WM_COALESCE_LAST", 0x039f);
	AddEnumsMember(idx, "MM_JOY1MOVE", 0x03a0);
	AddEnumsMember(idx, "MM_JOY2MOVE", 0x03a1);
	AddEnumsMember(idx, "MM_JOY1ZMOVE", 0x03a2);
	AddEnumsMember(idx, "MM_JOY2ZMOVE", 0x03a3);
	AddEnumsMember(idx, "WM_UNDEF_0x03a4", 0x03a4);
	AddEnumsMember(idx, "WM_UNDEF_0x03a5", 0x03a5);
	AddEnumsMember(idx, "WM_UNDEF_0x03a6", 0x03a6);
	AddEnumsMember(idx, "WM_UNDEF_0x03a7", 0x03a7);
	AddEnumsMember(idx, "WM_UNDEF_0x03a8", 0x03a8);
	AddEnumsMember(idx, "WM_UNDEF_0x03a9", 0x03a9);
	AddEnumsMember(idx, "WM_UNDEF_0x03aa", 0x03aa);
	AddEnumsMember(idx, "WM_UNDEF_0x03ab", 0x03ab);
	AddEnumsMember(idx, "WM_UNDEF_0x03ac", 0x03ac);
	AddEnumsMember(idx, "WM_UNDEF_0x03ad", 0x03ad);
	AddEnumsMember(idx, "WM_UNDEF_0x03ae", 0x03ae);
	AddEnumsMember(idx, "WM_UNDEF_0x03af", 0x03af);
	AddEnumsMember(idx, "WM_UNDEF_0x03b0", 0x03b0);
	AddEnumsMember(idx, "WM_UNDEF_0x03b1", 0x03b1);
	AddEnumsMember(idx, "WM_UNDEF_0x03b2", 0x03b2);
	AddEnumsMember(idx, "WM_UNDEF_0x03b3", 0x03b3);
	AddEnumsMember(idx, "WM_UNDEF_0x03b4", 0x03b4);
	AddEnumsMember(idx, "MM_JOY1BUTTONDOWN", 0x03b5);
	AddEnumsMember(idx, "MM_JOY2BUTTONDOWN", 0x03b6);
	AddEnumsMember(idx, "MM_JOY1BUTTONUP", 0x03b7);
	AddEnumsMember(idx, "MM_JOY2BUTTONUP", 0x03b8);
	AddEnumsMember(idx, "MM_MCINOTIFY", 0x03b9);
	AddEnumsMember(idx, "WM_UNDEF_0x03ba", 0x03ba);
	AddEnumsMember(idx, "MM_WOM_OPEN", 0x03bb);
	AddEnumsMember(idx, "MM_WOM_CLOSE", 0x03bc);
	AddEnumsMember(idx, "MM_WOM_DONE", 0x03bd);
	AddEnumsMember(idx, "MM_WIM_OPEN", 0x03be);
	AddEnumsMember(idx, "MM_WIM_CLOSE", 0x03bf);
	AddEnumsMember(idx, "MM_WIM_DATA", 0x03c0);
	AddEnumsMember(idx, "MM_MIM_OPEN", 0x03c1);
	AddEnumsMember(idx, "MM_MIM_CLOSE", 0x03c2);
	AddEnumsMember(idx, "MM_MIM_DATA", 0x03c3);
	AddEnumsMember(idx, "MM_MIM_LONGDATA", 0x03c4);
	AddEnumsMember(idx, "MM_MIM_ERROR", 0x03c5);
	AddEnumsMember(idx, "MM_MIM_LONGERROR", 0x03c6);
	AddEnumsMember(idx, "MM_MOM_OPEN", 0x03c7);
	AddEnumsMember(idx, "MM_MOM_CLOSE", 0x03c8);
	AddEnumsMember(idx, "MM_MOM_DONE", 0x03c9);
	AddEnumsMember(idx, "WM_UNDEF_0x03ca", 0x03ca);
	AddEnumsMember(idx, "WM_UNDEF_0x03cb", 0x03cb);
	AddEnumsMember(idx, "WM_UNDEF_0x03cc", 0x03cc);
	AddEnumsMember(idx, "WM_UNDEF_0x03cd", 0x03cd);
	AddEnumsMember(idx, "WM_UNDEF_0x03ce", 0x03ce);
	AddEnumsMember(idx, "WM_UNDEF_0x03cf", 0x03cf);
	AddEnumsMember(idx, "WM_UNDEF_0x03d0", 0x03d0);
	AddEnumsMember(idx, "WM_UNDEF_0x03d1", 0x03d1);
	AddEnumsMember(idx, "WM_UNDEF_0x03d2", 0x03d2);
	AddEnumsMember(idx, "WM_UNDEF_0x03d3", 0x03d3);
	AddEnumsMember(idx, "WM_UNDEF_0x03d4", 0x03d4);
	AddEnumsMember(idx, "WM_UNDEF_0x03d5", 0x03d5);
	AddEnumsMember(idx, "WM_UNDEF_0x03d6", 0x03d6);
	AddEnumsMember(idx, "WM_UNDEF_0x03d7", 0x03d7);
	AddEnumsMember(idx, "WM_UNDEF_0x03d8", 0x03d8);
	AddEnumsMember(idx, "WM_UNDEF_0x03d9", 0x03d9);
	AddEnumsMember(idx, "WM_UNDEF_0x03da", 0x03da);
	AddEnumsMember(idx, "WM_UNDEF_0x03db", 0x03db);
	AddEnumsMember(idx, "WM_UNDEF_0x03dc", 0x03dc);
	AddEnumsMember(idx, "WM_UNDEF_0x03dd", 0x03dd);
	AddEnumsMember(idx, "WM_UNDEF_0x03de", 0x03de);
	AddEnumsMember(idx, "WM_MM_RESERVED_LAST", 0x03df);
	AddEnumsMember(idx, "WM_DDE_INITIATE", 0x3E0);
	AddEnumsMember(idx, "WM_DDE_TERMINATE", 0x3E1);
	AddEnumsMember(idx, "WM_DDE_ADVISE", 0x3E2);
	AddEnumsMember(idx, "WM_DDE_UNADVISE", 0x3E3);
	AddEnumsMember(idx, "WM_DDE_ACK", 0x3E4);
	AddEnumsMember(idx, "WM_DDE_DATA", 0x3E5);
	AddEnumsMember(idx, "WM_DDE_REQUEST", 0x3E6);
	AddEnumsMember(idx, "WM_DDE_POKE", 0x3E7);
	AddEnumsMember(idx, "WM_DDE_EXECUTE", 0x3E8);
	AddEnumsMember(idx, "WM_UNDEF_0x03e9", 0x03e9);
	AddEnumsMember(idx, "WM_UNDEF_0x03ea", 0x03ea);
	AddEnumsMember(idx, "WM_UNDEF_0x03eb", 0x03eb);
	AddEnumsMember(idx, "WM_UNDEF_0x03ec", 0x03ec);
	AddEnumsMember(idx, "WM_UNDEF_0x03ed", 0x03ed);
	AddEnumsMember(idx, "WM_UNDEF_0x03ee", 0x03ee);
	AddEnumsMember(idx, "WM_UNDEF_0x03ef", 0x03ef);
	AddEnumsMember(idx, "WM_CBT_RESERVED_FIRST", 0x03f0);
	AddEnumsMember(idx, "WM_UNDEF_0x03f1", 0x03f1);
	AddEnumsMember(idx, "WM_UNDEF_0x03f2", 0x03f2);
	AddEnumsMember(idx, "WM_UNDEF_0x03f3", 0x03f3);
	AddEnumsMember(idx, "WM_UNDEF_0x03f4", 0x03f4);
	AddEnumsMember(idx, "WM_UNDEF_0x03f5", 0x03f5);
	AddEnumsMember(idx, "WM_UNDEF_0x03f6", 0x03f6);
	AddEnumsMember(idx, "WM_UNDEF_0x03f7", 0x03f7);
	AddEnumsMember(idx, "WM_UNDEF_0x03f8", 0x03f8);
	AddEnumsMember(idx, "WM_UNDEF_0x03f9", 0x03f9);
	AddEnumsMember(idx, "WM_UNDEF_0x03fa", 0x03fa);
	AddEnumsMember(idx, "WM_UNDEF_0x03fb", 0x03fb);
	AddEnumsMember(idx, "WM_UNDEF_0x03fc", 0x03fc);
	AddEnumsMember(idx, "WM_UNDEF_0x03fd", 0x03fd);
	AddEnumsMember(idx, "WM_UNDEF_0x03fe", 0x03fe);
	AddEnumsMember(idx, "WM_CBT_RESERVED_LAST", 0x03ff);
	AddEnumsMember(idx, "WM_APP", 0x8000);
	return idx;
}

static DefineCtrlIDEnum()
{
	auto idx, name;
	name = "AFX_CTRL_ID";
	idx = GetEnum(name);
	if (idx != -1){
		return idx;
	}

	idx = AddEnum(GetEnumQty(), name, 0x1100000);
	if ( idx == -1 )
	{
		Warning("无法创建枚举体（%s）。\n", name);
		return 0;
	}
	return idx;
}

static DefineMsgEntryStruct()
{
	auto idx, name, idMsgID, idCtrl;
	
	name = "AFX_MSGMAP_ENTRY";
	idx = GetStrucIdByName(name); 
	if(idx != -1)
	{
		return idx;
	}

	idMsgID = DefineMsgIDEnum();
	idCtrl = DefineCtrlIDEnum();

	idx = AddStruc(-1, name);
	if (idx == -1)
	{
		Warning("无法创建结构体（%s）！\n", name);
		return -1;
	}

	if (AddStrucMember(idx, "nMessage", GetStrucSize(idx), FF_0ENUM|FF_DWRD, idMsgID, 4) != 0)
	{
		Warning("Can't AddStrucMember nMessage\n");
		DelStruc(idx); 
		return -1;
	}
	if (AddStrucMember(idx, "nCode", GetStrucSize(idx), FF_DATA|FF_DWRD, -1, 4) != 0)
	{
		Warning("Can't AddStrucMember nCode\n");
		DelStruc(idx); 
		return -1;
	}
	if (AddStrucMember(idx, "nID", GetStrucSize(idx), FF_0ENUM|FF_DWRD, idCtrl, 4) != 0)
	{
		Warning("Can't AddStrucMember nID\n");
		DelStruc(idx); 
		return -1;
	}
	if (AddStrucMember(idx, "nLastID", GetStrucSize(idx), FF_0ENUM|FF_DWRD, idCtrl, 4) != 0)
	{
		Warning("Can't AddStrucMember nLastID\n");
		DelStruc(idx); 
		return -1;
	}
	if (AddStrucMember(idx, "nSig", GetStrucSize(idx), FF_DATA|FF_DWRD, -1, 4) != 0)
	{
		Warning("Can't AddStrucMember nSig\n");
		DelStruc(idx); 
		return -1;
	}
	if (AddStrucMember(idx, "pfn", GetStrucSize(idx), FF_0OFF|FF_DWRD, -1, 4) != 0)
	{
		Warning("Can't AddStrucMember pfn\n");
		DelStruc(idx); 
		return -1;
	}
	return idx;
}

static CheckMFCMap(addr)
{
	auto s, cmin, cmax, rmin, rmax;
	auto addrGetThisMessageMap, addrMsgEntry;

	s = FirstSeg();
	while(s != BADADDR)
	{
		if (SegName(s) == ".text")
		{
		  cmin = s;
		  cmax = NextSeg(s);
		}
		if (SegName(s) == ".rdata")
		{
		  rmin = s;
		  rmax = NextSeg(s);
		}
		s = NextSeg(s);
	}

	if (cmin == cmax || cmax == 0)return 0;
	if (rmin == rmax || rmax == 0)return 0;

	addrGetThisMessageMap = Dword(addr);
	addrMsgEntry = Dword(addr + 4);

	if (addrGetThisMessageMap < cmin || addrGetThisMessageMap > cmax)return 0;
	if (addrMsgEntry < rmin || addrMsgEntry > rmax)return 0;

	if (Dword(addrMsgEntry + 0) == 0 &&
		(Dword(addrMsgEntry + 4) != 0 ||
		Dword(addrMsgEntry + 8) != 0 ||
		Dword(addrMsgEntry + 12) != 0 ||
		Dword(addrMsgEntry + 16) != 0 ||
		Dword(addrMsgEntry + 20) != 0))
	{
		return 0;
	}

	if (Name(addr) == "")
	{
		if (Name(addrGetThisMessageMap) == "")
		{
			return 0;
		}
		return -1;
	}
	if (Name(addrGetThisMessageMap)[0:18] == "?GetThisMessageMap")
	{
		return 1;
	}
	while(addrMsgEntry != BADADDR)
	{
		if (Dword(addrMsgEntry + 0) == 0 &&
			Dword(addrMsgEntry + 4) == 0 &&
			Dword(addrMsgEntry + 8) == 0 &&
			Dword(addrMsgEntry + 12) == 0 &&
			Dword(addrMsgEntry + 16) == 0 &&
			Dword(addrMsgEntry + 20) == 0)
		{
			return 1;
		}
		if (Dword(addrMsgEntry + 4) > 0xfffff)return 0;
		if (Dword(addrMsgEntry + 8) > 65535)return 0;
		if (Dword(addrMsgEntry + 12) > 65535)return 0;
		if (Dword(addrMsgEntry + 16) > 0xfffff)return 0;
		if (addrGetThisMessageMap < cmin || addrGetThisMessageMap > cmax)
		{
			return 0;
		}
		if (Name(Dword(addrMsgEntry + 20)) == "")
		{
			return -2;
		}
		addrMsgEntry = addrMsgEntry + 24;
	}
	return 0;
}

static GenerateMFCMap(addrMsgMap)
{
	auto idMsgEntry, ptr, commt, idMsgID, idCtrl, id; 
	auto addr;
	addr = Dword(addrMsgMap + 4);
    
	idMsgEntry = DefineMsgEntryStruct();
	idMsgID = DefineMsgIDEnum();
	idCtrl = DefineCtrlIDEnum();

	
	if (CheckMFCMap(addrMsgMap) <= 0)
	{
		if (AskYN(0, form("0x%lX处可能不是MsgMap表格，是否强制转换？\n\n\n注：先将光标定位到MsgMap开始处，再按快捷键。", addrMsgMap)) != 1)
		{
			return 0;
		}
	}

	if (Name(addrMsgMap) == form("off_%lX", addrMsgMap) || Name(addrMsgMap) == "")
	{
		MakeName(addrMsgMap, form("MSG_MAP_%lX", addrMsgMap));
	}
	ptr = addr;
	while(Dword(ptr) != 0)
	{ 
		auto msgName;
		msgName = GetNameByMessage(Dword(ptr));
		if(MakeStructEx(ptr, 24, "AFX_MSGMAP_ENTRY") == 0)
		{ 
			Warning("无法在0x%lX处创建表格!\n", addr);
			Message("无法在0x%lX处创建表格!\n", addr);
			return;
		}
		id = Dword(ptr);
		if (GetNextConst(idMsgID, id - 1, -1) != id)
		{
			AddEnumsMember(idMsgID, form("WM_USER_0x%lX", id), id);
		}
		id = Dword(ptr + 8);
		if (GetNextConst(idCtrl, id - 1, -1) != id)
		{
			AddEnumsMember(idCtrl, form("CTRL_0x%lX",id), id);
		}
		id = Dword(ptr + 12);
		if (GetNextConst(idCtrl, id - 1, -1) != id)
		{
			AddEnumsMember(idCtrl, form("CTRL_0x%lX",id), id);
		}
		commt = form("消息处理函数:\n"
					 "    消息:       %s\n"
					 "    代码:       %d\n"
					 "    起始控件ID: %d\n"
					 "    终止控件ID: %d",
					 msgName,
				Dword(ptr + 4),
				Dword(ptr + 8),
				Dword(ptr + 12));
		id = Dword(ptr + 20);
		SetFunctionCmt(id, commt, 0);
		if (GetFunctionName(id) == form("sub_%lX", id) ||
			Name(id) == "")
		{
			if (Dword(ptr + 8) == Dword(ptr + 12))
			{
				if(Dword(ptr + 8) != 0)
				{
					MakeName(id, form("On%s_%lX_%lu", msgName, id, Dword(ptr + 8)));
				}
				else
				{
					MakeName(id, form("On%s_%lX", msgName, id));
				}
			}
			else
			{
				MakeName(id, form("On%s_%lX_%lu_To_%lu", msgName, id, Dword(ptr + 8), Dword(ptr + 12)));
			}
		}
		ptr = ptr + 24; 
	}

	MakeStructEx(ptr, 24, "AFX_MSGMAP_ENTRY");
	Message("在0x%lX创建MsgMap表格完成。\n", addr);
}

static GenerateMFCMapAtCurrent()
{
	GenerateMFCMap(ScreenEA());
}

static FindMFCMap()
{
	auto addr, rmin, rmax, totalCount, parseCount;
	addr = FirstSeg();
	rmin = 0;
	rmax = 0;
	totalCount = 0;
	while(addr != BADADDR)
	{
		if (SegName(addr) == ".rdata")
		{
		  rmin = addr;
		  rmax = NextSeg(addr);
		  break;
		}
		addr = NextSeg(addr);
	}

	if (rmin == rmax || rmax == 0)return;

	addr = rmin;
	while(addr != BADADDR)
	{
		auto ret;
		ret = CheckMFCMap(addr);
		if (ret <= 0)
		{
			if (ret == -1)
			{
				Message("0x%lX有可能是MsgMap，但是，无法确定。因为IDA没有解析出消息GetThisMessageMap函数。\n", addr);
			}
			else if (ret != 0)
			{
				Message("0x%lX很可能是MsgMap，但是，无法确定。因为IDA没有解析出消息处理函数。\n", addr);
			}
		}
		else
		{
			totalCount = totalCount + 1;
			Message("0x%X处是MsgMap，", addr);
			if (Name(addr) == form("off_%lX", addr))
			{
				parseCount = parseCount + 1;
				GenerateMFCMap(addr);
			}
			else
			{
				Message("已经解析过，忽略。\n");
			}
		}
		addr = NextAddr(addr);
		if (addr > rmax)break;
	}
	Message("---------------查找完毕, 总计%lu个，新解析%lu个------------\n", totalCount, parseCount);
}

static main()
{
	AddHotkey("Alt-P", "GenerateMFCMapAtCurrent");
	AddHotkey("Shift-P", "FindMFCMap");
	Message("您可以使用快捷键“Alt-P”来解析MsgMap。\n");
	Message("您可以使用快捷键“Shift-P”来搜索并解析MsgMap。\n");
}
